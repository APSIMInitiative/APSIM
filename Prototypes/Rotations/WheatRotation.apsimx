{
  "$type": "Models.Core.Simulations, Models",
  "ExplorerWidth": 300,
  "Version": 57,
  "Name": "Simulations",
  "Children": [
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "Wheat Maize Rotation",
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "StartDate": "1900-01-01T00:00:00",
          "EndDate": "1910-01-01T00:00:00",
          "Name": "Clock",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "CaptureErrors": true,
          "CaptureWarnings": true,
          "CaptureSummaryText": true,
          "Name": "SummaryFile",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Weather, Models",
          "FileName": "%root%\\Examples\\WeatherFiles\\Dalby.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "SoilArbitrator",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "Name": "Field",
          "Children": [
            {
              "$type": "Models.Report.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[Wheat].Phenology.Zadok.Stage",
                "[Wheat].Phenology.CurrentStageName",
                "[Wheat].IsAlive",
                "[Wheat].IsReadyForHarvesting",
                "SowingRule1.Script.canLeave",
                "[Wheat].AboveGround.Wt",
                "[Wheat].AboveGround.N",
                "[Wheat].Grain.Total.Wt*10 as WheatYield",
                "[Maize].Grain.Total.Wt*10 as MaizeYield",
                "[Wheat].Grain.Protein",
                "[Wheat].Grain.Size",
                "[Wheat].Grain.Number",
                "[Wheat].Grain.Total.Wt",
                "[Wheat].Grain.Total.N",
                "[Wheat].Total.Wt",
                "Sum([Soil].SoilWater.ESW) as ESW",
                "[Soil].SoilWater.Es as ESoil"
              ],
              "EventNames": [
                "[Clock].EndOfDay"
              ],
              "Name": "Report",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "Weirdo": null,
              "RecordNumber": 0,
              "ASCOrder": "Vertosol",
              "ASCSubOrder": "Black",
              "SoilType": "Clay",
              "LocalName": null,
              "Site": "Norwin",
              "NearestTown": "Norwin",
              "Region": "Darling Downs and Granite Belt",
              "State": "Queensland",
              "Country": "Australia",
              "NaturalVegetation": "Qld. Bluegrass, possible Qld. Blue gum",
              "ApsoilNumber": "900",
              "Latitude": -27.581836,
              "Longitude": 151.320206,
              "LocationAccuracy": " +/- 20m",
              "DataSource": "CSIRO Sustainable Ecosystems, Toowoomba; Characteriesd as part of the GRDC funded project\"Doing it better, doing it smarter, managing soil water in Australian agriculture' 2011",
              "Comments": "OC, CLL for all crops estimated-based on Bongeen Mywybilla Soil No1",
              "Name": "Soil",
              "Children": [
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "BD": [
                    1.01056473311131,
                    1.07145631083388,
                    1.09393858528057,
                    1.15861335018721,
                    1.17301160318016,
                    1.16287303586874,
                    1.18749547755906
                  ],
                  "AirDry": [
                    0.130250054518252,
                    0.198689390775399,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "LL15": [
                    0.260500109036505,
                    0.248361738469248,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "DUL": [
                    0.52100021807301,
                    0.496723476938497,
                    0.488437607673005,
                    0.480296969355493,
                    0.471583596524955,
                    0.457070570557793,
                    0.452331759845006
                  ],
                  "SAT": [
                    0.588654817693846,
                    0.565676863836273,
                    0.557192986686577,
                    0.532787415023694,
                    0.527354112007486,
                    0.531179986464627,
                    0.521888499034317
                  ],
                  "KS": [
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "Name": "Water",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.261,
                        0.248,
                        0.28,
                        0.306,
                        0.36,
                        0.392,
                        0.446
                      ],
                      "KL": [
                        0.06,
                        0.06,
                        0.06,
                        0.04,
                        0.04,
                        0.02,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "WheatSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.261,
                        0.248,
                        0.28,
                        0.306,
                        0.36,
                        0.392,
                        0.446
                      ],
                      "KL": [
                        0.06,
                        0.06,
                        0.06,
                        0.04,
                        0.04,
                        0.02,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "MaizeSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilWater, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 5.0,
                  "SummerCona": 5.0,
                  "WinterDate": "1-Apr",
                  "WinterU": 5.0,
                  "WinterCona": 5.0,
                  "DiffusConst": 40.0,
                  "DiffusSlope": 16.0,
                  "Salb": 0.12,
                  "CN2Bare": 73.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "slope": "NaN",
                  "discharge_width": "NaN",
                  "catchment_area": "NaN",
                  "max_pond": 0.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "SWCON": [
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3
                  ],
                  "KLAT": null,
                  "ResidueInterception": 0.0,
                  "Name": "SoilWater",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilNitrogen, Models",
                  "fom_types": [
                    "default",
                    "manure",
                    "mucuna",
                    "lablab",
                    "shemp",
                    "stable"
                  ],
                  "fract_carb": [
                    0.2,
                    0.3,
                    0.54,
                    0.57,
                    0.45,
                    0.0
                  ],
                  "fract_cell": [
                    0.7,
                    0.3,
                    0.37,
                    0.37,
                    0.47,
                    0.1
                  ],
                  "fract_lign": [
                    0.1,
                    0.4,
                    0.09,
                    0.06,
                    0.08,
                    0.9
                  ],
                  "Name": "SoilNitrogen",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilNitrogenNO3, Models",
                      "Name": "NO3",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenNH4, Models",
                      "Name": "NH4",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenUrea, Models",
                      "Name": "Urea",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenPlantAvailableNO3, Models",
                      "Name": "PlantAvailableNO3",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenPlantAvailableNH4, Models",
                      "Name": "PlantAvailableNH4",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilOrganicMatter, Models",
                  "RootCN": 40.0,
                  "EnrACoeff": 7.4,
                  "EnrBCoeff": 0.2,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-60",
                    "60-90",
                    "90-120",
                    "120-150",
                    "150-180"
                  ],
                  "OC": [
                    1.2,
                    0.96,
                    0.6,
                    0.3,
                    0.18,
                    0.12,
                    0.12
                  ],
                  "OCMetadata": null,
                  "SoilCN": [
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0
                  ],
                  "FBiom": [
                    0.04,
                    0.02,
                    0.02,
                    0.02,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.4,
                    0.6,
                    0.8,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "RootWt": [
                    347.12903231275641,
                    270.3443621919937,
                    163.97214434990104,
                    99.454132887040629,
                    60.321980831124677,
                    36.587130828674873,
                    22.1912165985086
                  ],
                  "OCUnits": 0,
                  "Name": "SoilOrganicMatter",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Analysis, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Rocks": null,
                  "RocksMetadata": null,
                  "Texture": null,
                  "TextureMetadata": null,
                  "MunsellColour": null,
                  "MunsellMetadata": null,
                  "EC": null,
                  "ECMetadata": null,
                  "PH": [
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0
                  ],
                  "PHMetadata": null,
                  "CL": null,
                  "CLMetadata": null,
                  "Boron": null,
                  "BoronMetadata": null,
                  "CEC": null,
                  "CECMetadata": null,
                  "Ca": null,
                  "CaMetadata": null,
                  "Mg": null,
                  "MgMetadata": null,
                  "Na": null,
                  "NaMetadata": null,
                  "K": null,
                  "KMetadata": null,
                  "ESP": null,
                  "ESPMetadata": null,
                  "Mn": null,
                  "MnMetadata": null,
                  "Al": null,
                  "AlMetadata": null,
                  "ParticleSizeSand": null,
                  "ParticleSizeSandMetadata": null,
                  "ParticleSizeSilt": null,
                  "ParticleSizeSiltMetadata": null,
                  "ParticleSizeClay": null,
                  "ParticleSizeClayMetadata": null,
                  "PHUnits": 0,
                  "BoronUnits": 0,
                  "Name": "Analysis",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.InitialWater, Models",
                  "PercentMethod": 1,
                  "FractionFull": 1.0,
                  "DepthWetSoil": "NaN",
                  "RelativeTo": null,
                  "Name": "InitialWater",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Sample, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "NO3": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "NH4": [
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1
                  ],
                  "SW": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "OC": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "EC": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "CL": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "ESP": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "PH": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "NO3Units": 0,
                  "NH4Units": 0,
                  "SWUnits": 0,
                  "OCUnits": 0,
                  "PHUnits": 0,
                  "Name": "InitialN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "CERESSoilTemperature",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "InitialResidueName": "wheat_stubble",
              "InitialResidueType": "wheat",
              "InitialResidueMass": 500.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 100.0,
              "FractionFaecesAdded": 0.5,
              "ResourceName": "SurfaceOrganicMatter",
              "Name": "SurfaceOrganicMatter",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "Wheat",
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "Wheat",
              "Name": "Wheat",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "Maize",
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "Maize",
              "Name": "Maize",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "soil_albedo": 0.3,
              "SoilHeatFluxFraction": 0.4,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock Clock;\r\n        [Link] Fertiliser Fertiliser;\r\n        [Link] Summary Summary;\r\n        \r\n        \r\n        [Description(\"Amount of fertiliser to be applied (kg/ha)\")]\r\n        public double Amount { get; set;}\r\n        \r\n        [Description(\"Crop to be fertilised\")]\r\n        public string CropName { get; set;}\r\n        \r\n        \r\n        \r\n\r\n        [EventSubscribe(\"Sowing\")]\r\n        private void OnSowing(object sender, EventArgs e)\r\n        {\r\n            Model crop = sender as Model;\r\n            if (crop.Name.ToLower()==CropName.ToLower())\r\n                Fertiliser.Apply(Amount: Amount, Type: Fertiliser.Types.NO3N);\r\n        }\r\n        \r\n    }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "Amount",
                  "Value": "160"
                },
                {
                  "Key": "CropName",
                  "Value": "wheat"
                }
              ],
              "Name": "SowingFertiliser",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using System;\r\nusing System.Text;\r\nusing System.Collections.Generic;\r\n\r\nusing Models.Core;\r\nusing Models.Utilities;\r\nusing APSIM.Shared.Utilities;\r\n\r\nnamespace Models\r\n{\r\n\t[Serializable]\r\n\tpublic class Script : Model\r\n\t{\r\n\t\t[Link] Simulation MySimulation;\r\n\t\t[Link] Simulations MySimulations;\r\n\t\t[Link] Summary Summary;\r\n\r\n\t\t[Units(\"\")] //[Description(\"Current State of DG\")] \r\n        public string currentState\r\n\t\t{\r\n\t\t\tget { return (_currentState); }\r\n\t\t\tset { }\r\n\t\t}\r\n\r\n\t\tprivate DirectedGraph g;\r\n\r\n\t\tprivate string _currentState = \"\";\r\n\r\n\t\tprivate void setState(string s)\r\n\t\t{\r\n\t\t\t_currentState = s;\r\n\t\t}\r\n\t\tprivate string getState()\r\n\t\t{\r\n\t\t\treturn (_currentState);\r\n\t\t}\r\n\r\n\t\t[EventSubscribe(\"Commencing\")]\r\n\t\tprivate void OnCommence(object sender, EventArgs e)\r\n\t\t{\r\n\t\t\tg = new DirectedGraph();\r\n\t\t\tint i = 0;\r\n\t\t\t// Autogenerated from chart vvvvvvvvvv\r\n\t\t\t//##PART 1 ##\r\n\t\t\tstring[] states = new string[4];\r\n\t\t\tg.AddNode(\"Wheat\");\r\n\t\t\tstates[i++] = \"Wheat\";\r\n\t\t\tg.AddNode(\"fallow0\");\r\n\t\t\tstates[i++] = \"fallow0\";\r\n\t\t\tg.AddNode(\"Maize\");\r\n\t\t\tstates[i++] = \"Maize\";\r\n\t\t\tg.AddNode(\"fallow1\");\r\n\t\t\tstates[i++] = \"fallow1\";\r\n\r\n\t\t\truleAction arc0a = new ruleAction();\r\n\t\t\tarc0a.testCondition.Add(\"[SowingRule1].Script.canLeave\");\r\n\t\t\tarc0a.action.Add(\"[SowingRule1].Script.Leave\");\r\n\t\t\tg.AddDirectedEdge(\"Wheat\", \"fallow0\", arc0a);\r\n\t\t\truleAction arc0b = new ruleAction();\r\n\t\t\tarc0b.testCondition.Add(\"[SowingRule2].Script.canEnter\");\r\n\t\t\tarc0b.action.Add(\"[SowingRule2].Script.Enter\");\r\n\t\t\tg.AddDirectedEdge(\"fallow0\", \"Maize\", arc0b);\r\n\t\t\truleAction arc1a = new ruleAction();\r\n\t\t\tarc1a.testCondition.Add(\"[SowingRule2].Script.canLeave\");\r\n\t\t\tarc1a.action.Add(\"[SowingRule2].Script.Leave\");\r\n\t\t\tg.AddDirectedEdge(\"Maize\", \"fallow1\", arc1a);\r\n\t\t\truleAction arc1b = new ruleAction();\r\n\t\t\tarc1b.testCondition.Add(\"[SowingRule1].Script.canEnter\");\r\n\t\t\tarc1b.action.Add(\"[SowingRule1].Script.Enter\");\r\n\t\t\tg.AddDirectedEdge(\"fallow1\", \"Wheat\", arc1b);\r\n\r\n\t\t\t//##PART 2##\r\n\t\t\tsetState(\"fallow0\");\r\n\t\t\t// Autogenerated from chart ^^^^^^^^^^^^^\r\n\r\n\r\n\r\n\t\t    (MySimulations.GetEventService(this) as Events).Publish(\"transition\", null);\r\n\t\t\tSummary.WriteMessage(this, \"Initialised, n states=\" + states.Length);\r\n\t\t}\r\n\r\n\t\t[EventSubscribe(\"DoManagement\")]\r\n\t\tprivate void OnProcess(object sender, EventArgs e)\r\n\t\t{\r\n\t\t\tbool more = true;\r\n\t\t\twhile (more)\r\n\t\t\t{\r\n\t\t\t\tmore = false;\r\n\t\t\t\tdouble bestScore = -1.0;\r\n\t\t\t\tstring bestArc = \"\";\r\n\t\t\t\tstring bestPaddock = \"\";\r\n\t\t\t\tNode s = g.FindNode(getState());\r\n\t\t\t\t//Summary.WriteMessage(this, \"process 0 state=\" + s.Name);\r\n\t\t\t\tforeach (string _arc in s.arcs.Keys)\r\n\t\t\t\t{\r\n\t\t\t\t\tdouble score = 1;\r\n\t\t\t\t\tforeach (string testCondition in s.arcs[_arc].testCondition)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar v = MySimulation.Get(testCondition);\r\n  \t\t\t\t\t\tif (v == null) throw new Exception(\"Test condition \\\"\" + testCondition + \"\\\" returned nothing\");\r\n\t\t\t\t\t\t//Summary.WriteMessage(this, \"process 1 test=\" + testCondition + \" value=\" + v);\r\n\t\t\t\t\t\tdouble c = System.Convert.ToDouble(v);\r\n\t\t\t\t\t\tscore *= c;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (score > bestScore)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbestScore = score;\r\n\t\t\t\t\t\tbestArc = _arc;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (bestScore > 0.0)\r\n\t\t\t\t{\r\n\t\t\t\t    Events eventService = (Events) MySimulations.GetEventService(this);\r\n\r\n\t\t\t\t\ts = g.FindNode(getState());\r\n\t\t\t\t\tif (getState() != \"\") {\r\n                        eventService.Publish(\"transition_from_\" + getState(), null);\r\n                        eventService.Publish(\"transition\", null);\r\n                        setState(g.FindArcTarget(bestArc));\r\n                    }\r\n\t\t\t\t\tforeach (string action in s.arcs[bestArc].action)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//Summary.WriteMessage(this, \" action=\" + action);\r\n                        eventService.Publish(action, null /*new object[] { null, new EventArgs() }*/);\r\n\t\t\t\t\t}\r\n\t\t\t\t\teventService.Publish(\"transition_to_\" + getState(), null);\r\n\t\t\t\t\tmore = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprivate class ruleAction\r\n\t\t{\r\n\t\t\tpublic string Target;\r\n\t\t\tpublic List<string> testCondition = new List<string>();\r\n\t\t\tpublic List<string> action = new List<string>();\r\n\t\t}\r\n\t\tprivate class Node : IEquatable<Node>\r\n\t\t{\r\n\t\t\tprivate string data /*, alias*/;\r\n\t\t\tpublic Node(string _data)\r\n\t\t\t{\r\n\t\t\t\tdata = _data;\r\n\t\t\t}\r\n\t\t\tpublic Dictionary<string, ruleAction> arcs = new Dictionary<string, ruleAction>();\r\n\t\t\tpublic bool Equals(Node other)\r\n\t\t\t{\r\n\t\t\t\treturn (this.data == other.data);\r\n\t\t\t}\r\n\t\t\tpublic string Name { get { return (data); } }\r\n\t\t}\r\n\t\t[Serializable]\r\n\t\tprivate class DirectedGraph\r\n\t\t{\r\n\r\n\t\t\tpublic List<Node> vertices;\r\n\t\t\tpublic void print()\r\n\t\t\t{\r\n\t\t\t\tforeach (Node n in vertices)\r\n\t\t\t\t{\r\n\t\t\t\t\tConsole.WriteLine(n.Name + \":\");\r\n\t\t\t\t\tforeach (string k in n.arcs.Keys)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tConsole.WriteLine(\"  \" + k);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpublic DirectedGraph()\r\n\t\t\t{\r\n\t\t\t\tvertices = new List<Node>();\r\n\t\t\t}\r\n\t\t\tpublic Node AddNode(Node node)\r\n\t\t\t{\r\n\t\t\t\tif (vertices.Find(delegate (Node n)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn (n.Equals(node));\r\n\t\t\t\t\t}) == null)\r\n\t\t\t\t\tvertices.Add(node);\r\n\t\t\t\treturn (vertices.Find(delegate (Node n)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn (n.Equals(node));\r\n\t\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tpublic Node AddNode(string value)\r\n\t\t\t{\r\n\t\t\t\treturn (AddNode(new Node(value)));\r\n\t\t\t}\r\n\t\t\tpublic Node FindNode(string value)\r\n\t\t\t{\r\n\t\t\t\treturn (FindNode(AddNode(value)));\r\n\t\t\t}\r\n\t\t\tpublic Node FindNode(Node node)\r\n\t\t\t{\r\n\t\t\t\treturn (vertices.Find(delegate (Node n)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn (n.Equals(node));\r\n\t\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tpublic void AddDirectedEdge(string source, string dest, ruleAction value)\r\n\t\t\t{\r\n\t\t\t\tint i = 0;\r\n\t\t\t\tforeach (Node n in vertices)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach (string arc in n.arcs.Keys)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tNode node1 = AddNode(source);\r\n\t\t\t\tAddNode(dest);\r\n\t\t\t\tvalue.Target = dest;\r\n\t\t\t\tnode1.arcs.Add(\"arc\" + i.ToString(), value);\r\n\t\t\t}\r\n\t\t\tpublic string FindArcTarget(string arc)\r\n\t\t\t{\r\n\t\t\t\tforeach (Node n in vertices)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach (string a in n.arcs.Keys)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (a == arc)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn (n.arcs[a].Target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tConsole.WriteLine(\"Aiee - no target for arc \" + arc);\r\n\t\t\t\treturn (\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "currentState",
                  "Value": ""
                }
              ],
              "Name": "Rotation",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing Models.Soils;\r\nusing Models.Utilities;\r\nusing APSIM.Shared.Utilities;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        //[Link] Simulation Simulation;\r\n        [Link] Clock Clock;\r\n        [Link] Summary Summary;\r\n        [Link] Soil Soil; \r\n\r\n        [Description(\"Crop to manage\")]\r\n        public IPlant Crop { get; set; }\r\n        [Separator(\"\")]\r\n        [Description(\"Start of sowing window (d-mmm)\")]\r\n        public string StartDate { get; set;}\r\n        [Description(\"End of sowing window (d-mmm)\")]\r\n        public string EndDate { get; set;}\r\n        [Description(\"Minimum extractable soil water for sowing (mm)\")]\r\n        public double MinESW { get; set;}\r\n        [Description(\"Accumulated rainfall required for sowing (mm)\")]\r\n        public double MinRain { get; set;}\r\n        [Description(\"Duration of rainfall accumulation (d)\")]\r\n        public int RainDays { get; set;}\r\n\r\n        public enum yesNoType\r\n        {\r\n            /// <summary>a positive answer</summary>\r\n            yes,\r\n            /// <summary>a negative answer</summary>\r\n            no\r\n        }\r\n\r\n        [Description(\"Must sow (yes/no)\")]\r\n        public yesNoType MustSow { get; set;}\r\n        [Separator(\"\")]\r\n        [Description(\"Cultivar to be sown\")]\r\n        [Display(Type=DisplayType.CultivarName)]\r\n        public string CultivarName { get; set;}\r\n        [Description(\"Sowing depth (mm)\")]\r\n        public double SowingDepth { get; set;}        \r\n        [Description(\"Row spacing (mm)\")]\r\n        public double RowSpacing { get; set;}    \r\n        [Description(\"Plant population (/m2)\")]\r\n        public double Population { get; set;}    \r\n\r\n        private Accumulator accumulatedRain;\r\n        private bool afterInit = false;\r\n                \r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n            if (Crop == null) { throw new Exception(\"Crop must not be null in rotations\"); }\r\n            accumulatedRain = new Accumulator(this, \"[Weather].Rain\", RainDays);\r\n            afterInit = true;\r\n            Summary.WriteMessage(this, Apsim.FullPath(this) + \" - Commence, crop=\" + (Crop as Model).Name);\r\n        }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void DoManagement(object sender, EventArgs e)\r\n        {\r\n            accumulatedRain.Update();\r\n            //FIXME test if sequencer...\r\n            //if (canEnter > 0)\r\n            //    OnEnter();\r\n\r\n            //if (canLeave > 0)\r\n            //    OnLeave();\r\n        }\r\n\r\n   // Test whether we can sow a crop today\r\n   // +ve number - yes\r\n   // 0          - no\r\n   // -ve number - no, out of scope (planting window)\r\n   [Units(\"0-1\")]\r\n   public int canEnter  {\r\n      get {\r\n         if (!afterInit) {return (0);}\r\n         bool isPossibleToday = false;\r\n         bool inWindow = DateUtilities.WithinDates(StartDate, Clock.Today, EndDate);\r\n         bool endOfWindow = DateUtilities.DatesEqual(EndDate, Clock.Today);\r\n         if (! Crop.IsAlive &&\r\n             inWindow &&\r\n             accumulatedRain.Sum > MinRain &&\r\n             MathUtilities.Sum(Soil.SoilWater.ESW) > MinESW) \r\n            isPossibleToday = true;\r\n\r\n         //Summary.WriteMessage(this, \"canEnter:\" + isPossibleToday);\r\n\r\n\t     if (isPossibleToday)\r\n            return 1;\r\n         \r\n         if (! Crop.IsAlive && endOfWindow && MustSow == yesNoType.yes) \r\n            return 1;\r\n\r\n         if (! Crop.IsAlive && ! inWindow)\r\n            return -1;\r\n         return 0;\r\n      }\r\n      set {}\r\n   }\r\n\r\n   [EventSubscribe(\"Enter\")]\r\n   private void OnEnter ()  {\r\n      Summary.WriteMessage(this, Apsim.FullPath(this) + \" -  sowing \" + (Crop as Model).Name);\r\n      Crop.Sow(population:Population, cultivar:CultivarName, depth:SowingDepth, rowSpacing:RowSpacing);    \r\n   }\r\n\r\n   [Units(\"0-1\")] \r\n   public int canLeave  {\r\n      get {\r\n        if (!afterInit) { return (0); }\r\n        //Summary.WriteMessage(this, \"canLeave:\" + Crop.IsReadyForHarvesting);\r\n        return(Crop.IsReadyForHarvesting ? 1 : 0);\r\n      }\r\n      set{}\r\n   } \r\n\r\n   [EventSubscribe(\"Leave\")]\r\n   private void OnLeave ()  {\r\n      Crop.Harvest();\r\n      Crop.EndCrop();    \r\n   }\r\n  }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": ".Simulations.Wheat Maize Rotation.Field.Wheat"
                },
                {
                  "Key": "StartDate",
                  "Value": "1-may"
                },
                {
                  "Key": "EndDate",
                  "Value": "10-jul"
                },
                {
                  "Key": "MinESW",
                  "Value": "100"
                },
                {
                  "Key": "MinRain",
                  "Value": "25"
                },
                {
                  "Key": "RainDays",
                  "Value": "7"
                },
                {
                  "Key": "MustSow",
                  "Value": "yes"
                },
                {
                  "Key": "CultivarName",
                  "Value": "Hartog"
                },
                {
                  "Key": "SowingDepth",
                  "Value": "30"
                },
                {
                  "Key": "RowSpacing",
                  "Value": "250"
                },
                {
                  "Key": "Population",
                  "Value": "120"
                },
                {
                  "Key": "canEnter",
                  "Value": "0"
                },
                {
                  "Key": "canLeave",
                  "Value": "0"
                }
              ],
              "Name": "SowingRule1",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing Models.Soils;\r\nusing Models.Utilities;\r\nusing APSIM.Shared.Utilities;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        //[Link] Simulation Simulation;\r\n        [Link] Clock Clock;\r\n        [Link] Summary Summary;\r\n        [Link] Soil Soil; \r\n\r\n        [Description(\"Crop to manage\")]\r\n        public IPlant Crop { get; set; }\r\n        [Separator(\"\")]\r\n        [Description(\"Start of sowing window (d-mmm)\")]\r\n        public string StartDate { get; set;}\r\n        [Description(\"End of sowing window (d-mmm)\")]\r\n        public string EndDate { get; set;}\r\n        [Description(\"Minimum extractable soil water for sowing (mm)\")]\r\n        public double MinESW { get; set;}\r\n        [Description(\"Accumulated rainfall required for sowing (mm)\")]\r\n        public double MinRain { get; set;}\r\n        [Description(\"Duration of rainfall accumulation (d)\")]\r\n        public int RainDays { get; set;}\r\n\r\n        public enum yesNoType\r\n        {\r\n            /// <summary>a positive answer</summary>\r\n            yes,\r\n            /// <summary>a negative answer</summary>\r\n            no\r\n        }\r\n\r\n        [Description(\"Must sow (yes/no)\")]\r\n        public yesNoType MustSow { get; set;}\r\n        [Separator(\"\")]\r\n        [Description(\"Cultivar to be sown\")]\r\n        [Display(Type=DisplayType.CultivarName)]\r\n        public string CultivarName { get; set;}\r\n        [Description(\"Sowing depth (mm)\")]\r\n        public double SowingDepth { get; set;}        \r\n        [Description(\"Row spacing (mm)\")]\r\n        public double RowSpacing { get; set;}    \r\n        [Description(\"Plant population (/m2)\")]\r\n        public double Population { get; set;}    \r\n\r\n        private Accumulator accumulatedRain;\r\n        private bool afterInit = false;\r\n                \r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        if (Crop == null) { throw new Exception(\"Crop must not be null in rotations\"); }\r\n            accumulatedRain = new Accumulator(this, \"[Weather].Rain\", RainDays);\r\n            afterInit = true;\r\n            Summary.WriteMessage(this, Apsim.FullPath(this) + \" - Commence, crop=\" + (Crop as Model).Name);\r\n        }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void DoManagement(object sender, EventArgs e)\r\n        {\r\n            accumulatedRain.Update();\r\n            //FIXME test if sequencer...\r\n            //if (canEnter > 0)\r\n            //    OnEnter();\r\n\r\n            //if (canLeave > 0)\r\n            //    OnLeave();\r\n        }\r\n\r\n   // Test whether we can sow a crop today\r\n   // +ve number - yes\r\n   // 0          - no\r\n   // -ve number - no, out of scope (planting window)\r\n   [Units(\"0-1\")]\r\n   public int canEnter  {\r\n      get {\r\n         if (!afterInit) {return (0);}\r\n         bool isPossibleToday = false;\r\n         bool inWindow = DateUtilities.WithinDates(StartDate, Clock.Today, EndDate);\r\n         bool endOfWindow = DateUtilities.DatesEqual(EndDate, Clock.Today);\r\n         if (! Crop.IsAlive &&\r\n             inWindow &&\r\n             accumulatedRain.Sum > MinRain &&\r\n             MathUtilities.Sum(Soil.SoilWater.ESW) > MinESW) \r\n            isPossibleToday = true;\r\n\r\n         //Summary.WriteMessage(this, \"canEnter:\" + isPossibleToday);\r\n\r\n\t     if (isPossibleToday)\r\n            return 1;\r\n         \r\n         if (! Crop.IsAlive && endOfWindow && MustSow == yesNoType.yes) \r\n            return 1;\r\n\r\n         if (! Crop.IsAlive && ! inWindow)\r\n            return -1;\r\n         return 0;\r\n      }\r\n      set {}\r\n   }\r\n\r\n   [EventSubscribe(\"Enter\")]\r\n   private void OnEnter ()  {\r\n      Summary.WriteMessage(this, Apsim.FullPath(this) + \" -  sowing \" + (Crop as Model).Name);\r\n      Crop.Sow(population:Population, cultivar:CultivarName, depth:SowingDepth, rowSpacing:RowSpacing);    \r\n   }\r\n\r\n   [Units(\"0-1\")] \r\n   public int canLeave  {\r\n      get {\r\n        if (!afterInit) { return (0); }\r\n        //Summary.WriteMessage(this, \"canLeave:\" + Crop.IsReadyForHarvesting);\r\n        return(Crop.IsReadyForHarvesting ? 1 : 0);\r\n      }\r\n      set{}\r\n   } \r\n\r\n   [EventSubscribe(\"Leave\")]\r\n   private void OnLeave ()  {\r\n      Crop.Harvest();\r\n      Crop.EndCrop();    \r\n   }\r\n  }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": ".Simulations.Wheat Maize Rotation.Field.Maize"
                },
                {
                  "Key": "StartDate",
                  "Value": "10-oct"
                },
                {
                  "Key": "EndDate",
                  "Value": "10-nov"
                },
                {
                  "Key": "MinESW",
                  "Value": "100"
                },
                {
                  "Key": "MinRain",
                  "Value": "25"
                },
                {
                  "Key": "RainDays",
                  "Value": "7"
                },
                {
                  "Key": "MustSow",
                  "Value": "yes"
                },
                {
                  "Key": "CultivarName",
                  "Value": "Katumani"
                },
                {
                  "Key": "SowingDepth",
                  "Value": "30"
                },
                {
                  "Key": "RowSpacing",
                  "Value": "500"
                },
                {
                  "Key": "Population",
                  "Value": "4"
                },
                {
                  "Key": "canEnter",
                  "Value": "0"
                },
                {
                  "Key": "canLeave",
                  "Value": "0"
                }
              ],
              "Name": "SowingRule2",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": "Yield (kg/ha)",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "DisabledSeries": [],
          "Name": "Yield Time Series",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "WheatYield",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Wheat Yield",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -11094807,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "MaizeYield",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Maize Yield",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "Children": [],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "Wheat Maize Rotation1",
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "StartDate": "1900-01-01T00:00:00",
          "EndDate": "1910-01-01T00:00:00",
          "Name": "Clock",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "CaptureErrors": true,
          "CaptureWarnings": true,
          "CaptureSummaryText": true,
          "Name": "SummaryFile",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Weather, Models",
          "FileName": "%root%\\Examples\\WeatherFiles\\Dalby.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "SoilArbitrator",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "Name": "Field",
          "Children": [
            {
              "$type": "Models.Report.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[Wheat].Phenology.Zadok.Stage",
                "[Wheat].Phenology.CurrentStageName",
                "[Wheat].IsAlive",
                "[Wheat].IsReadyForHarvesting",
                "SowingRule1.Script.canLeave",
                "[Wheat].AboveGround.Wt",
                "[Wheat].AboveGround.N",
                "[Wheat].Grain.Total.Wt*10 as WheatYield",
                "[Maize].Grain.Total.Wt*10 as MaizeYield",
                "[Wheat].Grain.Protein",
                "[Wheat].Grain.Size",
                "[Wheat].Grain.Number",
                "[Wheat].Grain.Total.Wt",
                "[Wheat].Grain.Total.N",
                "[Wheat].Total.Wt",
                "Sum([Soil].SoilWater.ESW) as ESW",
                "[Soil].SoilWater.Es as ESoil"
              ],
              "EventNames": [
                "[Clock].EndOfDay"
              ],
              "Name": "Report",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "Weirdo": null,
              "RecordNumber": 0,
              "ASCOrder": "Vertosol",
              "ASCSubOrder": "Black",
              "SoilType": "Clay",
              "LocalName": null,
              "Site": "Norwin",
              "NearestTown": "Norwin",
              "Region": "Darling Downs and Granite Belt",
              "State": "Queensland",
              "Country": "Australia",
              "NaturalVegetation": "Qld. Bluegrass, possible Qld. Blue gum",
              "ApsoilNumber": "900",
              "Latitude": -27.581836,
              "Longitude": 151.320206,
              "LocationAccuracy": " +/- 20m",
              "DataSource": "CSIRO Sustainable Ecosystems, Toowoomba; Characteriesd as part of the GRDC funded project\"Doing it better, doing it smarter, managing soil water in Australian agriculture' 2011",
              "Comments": "OC, CLL for all crops estimated-based on Bongeen Mywybilla Soil No1",
              "Name": "Soil",
              "Children": [
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "BD": [
                    1.01056473311131,
                    1.07145631083388,
                    1.09393858528057,
                    1.15861335018721,
                    1.17301160318016,
                    1.16287303586874,
                    1.18749547755906
                  ],
                  "AirDry": [
                    0.130250054518252,
                    0.198689390775399,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "LL15": [
                    0.260500109036505,
                    0.248361738469248,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "DUL": [
                    0.52100021807301,
                    0.496723476938497,
                    0.488437607673005,
                    0.480296969355493,
                    0.471583596524955,
                    0.457070570557793,
                    0.452331759845006
                  ],
                  "SAT": [
                    0.588654817693846,
                    0.565676863836273,
                    0.557192986686577,
                    0.532787415023694,
                    0.527354112007486,
                    0.531179986464627,
                    0.521888499034317
                  ],
                  "KS": [
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "Name": "Water",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.261,
                        0.248,
                        0.28,
                        0.306,
                        0.36,
                        0.392,
                        0.446
                      ],
                      "KL": [
                        0.06,
                        0.06,
                        0.06,
                        0.04,
                        0.04,
                        0.02,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "WheatSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.261,
                        0.248,
                        0.28,
                        0.306,
                        0.36,
                        0.392,
                        0.446
                      ],
                      "KL": [
                        0.06,
                        0.06,
                        0.06,
                        0.04,
                        0.04,
                        0.02,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "MaizeSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilWater, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 5.0,
                  "SummerCona": 5.0,
                  "WinterDate": "1-Apr",
                  "WinterU": 5.0,
                  "WinterCona": 5.0,
                  "DiffusConst": 40.0,
                  "DiffusSlope": 16.0,
                  "Salb": 0.12,
                  "CN2Bare": 73.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "slope": "NaN",
                  "discharge_width": "NaN",
                  "catchment_area": "NaN",
                  "max_pond": 0.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "SWCON": [
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3
                  ],
                  "KLAT": null,
                  "ResidueInterception": 0.0,
                  "Name": "SoilWater",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilNitrogen, Models",
                  "fom_types": [
                    "default",
                    "manure",
                    "mucuna",
                    "lablab",
                    "shemp",
                    "stable"
                  ],
                  "fract_carb": [
                    0.2,
                    0.3,
                    0.54,
                    0.57,
                    0.45,
                    0.0
                  ],
                  "fract_cell": [
                    0.7,
                    0.3,
                    0.37,
                    0.37,
                    0.47,
                    0.1
                  ],
                  "fract_lign": [
                    0.1,
                    0.4,
                    0.09,
                    0.06,
                    0.08,
                    0.9
                  ],
                  "Name": "SoilNitrogen",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilNitrogenNO3, Models",
                      "Name": "NO3",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenNH4, Models",
                      "Name": "NH4",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenUrea, Models",
                      "Name": "Urea",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenPlantAvailableNO3, Models",
                      "Name": "PlantAvailableNO3",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenPlantAvailableNH4, Models",
                      "Name": "PlantAvailableNH4",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilOrganicMatter, Models",
                  "RootCN": 40.0,
                  "EnrACoeff": 7.4,
                  "EnrBCoeff": 0.2,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-60",
                    "60-90",
                    "90-120",
                    "120-150",
                    "150-180"
                  ],
                  "OC": [
                    1.2,
                    0.96,
                    0.6,
                    0.3,
                    0.18,
                    0.12,
                    0.12
                  ],
                  "OCMetadata": null,
                  "SoilCN": [
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0
                  ],
                  "FBiom": [
                    0.04,
                    0.02,
                    0.02,
                    0.02,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.4,
                    0.6,
                    0.8,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "RootWt": [
                    347.12903231275641,
                    270.3443621919937,
                    163.97214434990104,
                    99.454132887040629,
                    60.321980831124677,
                    36.587130828674873,
                    22.1912165985086
                  ],
                  "OCUnits": 0,
                  "Name": "SoilOrganicMatter",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Analysis, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Rocks": null,
                  "RocksMetadata": null,
                  "Texture": null,
                  "TextureMetadata": null,
                  "MunsellColour": null,
                  "MunsellMetadata": null,
                  "EC": null,
                  "ECMetadata": null,
                  "PH": [
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0
                  ],
                  "PHMetadata": null,
                  "CL": null,
                  "CLMetadata": null,
                  "Boron": null,
                  "BoronMetadata": null,
                  "CEC": null,
                  "CECMetadata": null,
                  "Ca": null,
                  "CaMetadata": null,
                  "Mg": null,
                  "MgMetadata": null,
                  "Na": null,
                  "NaMetadata": null,
                  "K": null,
                  "KMetadata": null,
                  "ESP": null,
                  "ESPMetadata": null,
                  "Mn": null,
                  "MnMetadata": null,
                  "Al": null,
                  "AlMetadata": null,
                  "ParticleSizeSand": null,
                  "ParticleSizeSandMetadata": null,
                  "ParticleSizeSilt": null,
                  "ParticleSizeSiltMetadata": null,
                  "ParticleSizeClay": null,
                  "ParticleSizeClayMetadata": null,
                  "PHUnits": 0,
                  "BoronUnits": 0,
                  "Name": "Analysis",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.InitialWater, Models",
                  "PercentMethod": 1,
                  "FractionFull": 1.0,
                  "DepthWetSoil": "NaN",
                  "RelativeTo": null,
                  "Name": "InitialWater",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Sample, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "NO3": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "NH4": [
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1
                  ],
                  "SW": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "OC": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "EC": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "CL": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "ESP": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "PH": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "NO3Units": 0,
                  "NH4Units": 0,
                  "SWUnits": 0,
                  "OCUnits": 0,
                  "PHUnits": 0,
                  "Name": "InitialN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "CERESSoilTemperature",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "InitialResidueName": "wheat_stubble",
              "InitialResidueType": "wheat",
              "InitialResidueMass": 500.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 100.0,
              "FractionFaecesAdded": 0.5,
              "ResourceName": "SurfaceOrganicMatter",
              "Name": "SurfaceOrganicMatter",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "Wheat",
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "Wheat",
              "Name": "Wheat",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "Maize",
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "Maize",
              "Name": "Maize",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "soil_albedo": 0.3,
              "SoilHeatFluxFraction": 0.4,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock Clock;\r\n        [Link] Fertiliser Fertiliser;\r\n        [Link] Summary Summary;\r\n        \r\n        \r\n        [Description(\"Amount of fertiliser to be applied (kg/ha)\")]\r\n        public double Amount { get; set;}\r\n        \r\n        [Description(\"Crop to be fertilised\")]\r\n        public string CropName { get; set;}\r\n        \r\n        \r\n        \r\n\r\n        [EventSubscribe(\"Sowing\")]\r\n        private void OnSowing(object sender, EventArgs e)\r\n        {\r\n            Model crop = sender as Model;\r\n            if (crop.Name.ToLower()==CropName.ToLower())\r\n                Fertiliser.Apply(Amount: Amount, Type: Fertiliser.Types.NO3N);\r\n        }\r\n        \r\n    }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "Amount",
                  "Value": "160"
                },
                {
                  "Key": "CropName",
                  "Value": "wheat"
                }
              ],
              "Name": "SowingFertiliser",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing Models.Soils;\r\nusing Models.Utilities;\r\nusing APSIM.Shared.Utilities;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        //[Link] Simulation Simulation;\r\n        [Link] Clock Clock;\r\n        [Link] Summary Summary;\r\n        [Link] Soil Soil; \r\n\r\n        [Description(\"Crop to manage\")]\r\n        public IPlant Crop { get; set; }\r\n        [Separator(\"\")]\r\n        [Description(\"Start of sowing window (d-mmm)\")]\r\n        public string StartDate { get; set;}\r\n        [Description(\"End of sowing window (d-mmm)\")]\r\n        public string EndDate { get; set;}\r\n        [Description(\"Minimum extractable soil water for sowing (mm)\")]\r\n        public double MinESW { get; set;}\r\n        [Description(\"Accumulated rainfall required for sowing (mm)\")]\r\n        public double MinRain { get; set;}\r\n        [Description(\"Duration of rainfall accumulation (d)\")]\r\n        public int RainDays { get; set;}\r\n\r\n        public enum yesNoType\r\n        {\r\n            /// <summary>a positive answer</summary>\r\n            yes,\r\n            /// <summary>a negative answer</summary>\r\n            no\r\n        }\r\n\r\n        [Description(\"Must sow (yes/no)\")]\r\n        public yesNoType MustSow { get; set;}\r\n        [Separator(\"\")]\r\n        [Description(\"Cultivar to be sown\")]\r\n        [Display(Type=DisplayType.CultivarName)]\r\n        public string CultivarName { get; set;}\r\n        [Description(\"Sowing depth (mm)\")]\r\n        public double SowingDepth { get; set;}        \r\n        [Description(\"Row spacing (mm)\")]\r\n        public double RowSpacing { get; set;}    \r\n        [Description(\"Plant population (/m2)\")]\r\n        public double Population { get; set;}    \r\n\r\n        private Accumulator accumulatedRain;\r\n        private bool afterInit = false;\r\n                \r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n            if (Crop == null) { throw new Exception(\"Crop must not be null in rotations\"); }\r\n            accumulatedRain = new Accumulator(this, \"[Weather].Rain\", RainDays);\r\n            afterInit = true;\r\n            Summary.WriteMessage(this, Apsim.FullPath(this) + \" - Commence, crop=\" + (Crop as Model).Name);\r\n        }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void DoManagement(object sender, EventArgs e)\r\n        {\r\n            accumulatedRain.Update();\r\n            //FIXME test if sequencer...\r\n            //if (canEnter > 0)\r\n            //    OnEnter();\r\n\r\n            //if (canLeave > 0)\r\n            //    OnLeave();\r\n        }\r\n\r\n   // Test whether we can sow a crop today\r\n   // +ve number - yes\r\n   // 0          - no\r\n   // -ve number - no, out of scope (planting window)\r\n   [Units(\"0-1\")]\r\n   public int canEnter  {\r\n      get {\r\n         if (!afterInit) {return (0);}\r\n         bool isPossibleToday = false;\r\n         bool inWindow = DateUtilities.WithinDates(StartDate, Clock.Today, EndDate);\r\n         bool endOfWindow = DateUtilities.DatesEqual(EndDate, Clock.Today);\r\n         if (! Crop.IsAlive &&\r\n             inWindow &&\r\n             accumulatedRain.Sum > MinRain &&\r\n             MathUtilities.Sum(Soil.SoilWater.ESW) > MinESW) \r\n            isPossibleToday = true;\r\n\r\n         //Summary.WriteMessage(this, \"canEnter:\" + isPossibleToday);\r\n\r\n\t     if (isPossibleToday)\r\n            return 1;\r\n         \r\n         if (! Crop.IsAlive && endOfWindow && MustSow == yesNoType.yes) \r\n            return 1;\r\n\r\n         if (! Crop.IsAlive && ! inWindow)\r\n            return -1;\r\n         return 0;\r\n      }\r\n      set {}\r\n   }\r\n\r\n   [EventSubscribe(\"Enter\")]\r\n   public void Enter ()  {\r\n      Summary.WriteMessage(this, Apsim.FullPath(this) + \" -  sowing \" + (Crop as Model).Name);\r\n      Crop.Sow(population:Population, cultivar:CultivarName, depth:SowingDepth, rowSpacing:RowSpacing);    \r\n   }\r\n\r\n   [Units(\"0-1\")] \r\n   public int canLeave  {\r\n      get {\r\n        if (!afterInit) { return (0); }\r\n        //Summary.WriteMessage(this, \"canLeave:\" + Crop.IsReadyForHarvesting);\r\n        return(Crop.IsReadyForHarvesting ? 1 : 0);\r\n      }\r\n      set{}\r\n   } \r\n\r\n   [EventSubscribe(\"Leave\")]\r\n   public void Leave ()  {\r\n      Crop.Harvest();\r\n      Crop.EndCrop();    \r\n   }\r\n  }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": ".Simulations.Wheat Maize Rotation1.Field.Wheat"
                },
                {
                  "Key": "StartDate",
                  "Value": "1-may"
                },
                {
                  "Key": "EndDate",
                  "Value": "10-jul"
                },
                {
                  "Key": "MinESW",
                  "Value": "100"
                },
                {
                  "Key": "MinRain",
                  "Value": "25"
                },
                {
                  "Key": "RainDays",
                  "Value": "7"
                },
                {
                  "Key": "MustSow",
                  "Value": "yes"
                },
                {
                  "Key": "CultivarName",
                  "Value": "Hartog"
                },
                {
                  "Key": "SowingDepth",
                  "Value": "30"
                },
                {
                  "Key": "RowSpacing",
                  "Value": "250"
                },
                {
                  "Key": "Population",
                  "Value": "120"
                },
                {
                  "Key": "canEnter",
                  "Value": "0"
                },
                {
                  "Key": "canLeave",
                  "Value": "0"
                }
              ],
              "Name": "SowingRule1",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing Models.Soils;\r\nusing Models.Utilities;\r\nusing APSIM.Shared.Utilities;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        //[Link] Simulation Simulation;\r\n        [Link] Clock Clock;\r\n        [Link] Summary Summary;\r\n        [Link] Soil Soil; \r\n\r\n        [Description(\"Crop to manage\")]\r\n        public IPlant Crop { get; set; }\r\n        [Separator(\"\")]\r\n        [Description(\"Start of sowing window (d-mmm)\")]\r\n        public string StartDate { get; set;}\r\n        [Description(\"End of sowing window (d-mmm)\")]\r\n        public string EndDate { get; set;}\r\n        [Description(\"Minimum extractable soil water for sowing (mm)\")]\r\n        public double MinESW { get; set;}\r\n        [Description(\"Accumulated rainfall required for sowing (mm)\")]\r\n        public double MinRain { get; set;}\r\n        [Description(\"Duration of rainfall accumulation (d)\")]\r\n        public int RainDays { get; set;}\r\n\r\n        public enum yesNoType\r\n        {\r\n            /// <summary>a positive answer</summary>\r\n            yes,\r\n            /// <summary>a negative answer</summary>\r\n            no\r\n        }\r\n\r\n        [Description(\"Must sow (yes/no)\")]\r\n        public yesNoType MustSow { get; set;}\r\n        [Separator(\"\")]\r\n        [Description(\"Cultivar to be sown\")]\r\n        [Display(Type=DisplayType.CultivarName)]\r\n        public string CultivarName { get; set;}\r\n        [Description(\"Sowing depth (mm)\")]\r\n        public double SowingDepth { get; set;}        \r\n        [Description(\"Row spacing (mm)\")]\r\n        public double RowSpacing { get; set;}    \r\n        [Description(\"Plant population (/m2)\")]\r\n        public double Population { get; set;}    \r\n\r\n        private Accumulator accumulatedRain;\r\n        private bool afterInit = false;\r\n                \r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        if (Crop == null) { throw new Exception(\"Crop must not be null in rotations\"); }\r\n            accumulatedRain = new Accumulator(this, \"[Weather].Rain\", RainDays);\r\n            afterInit = true;\r\n            Summary.WriteMessage(this, Apsim.FullPath(this) + \" - Commence, crop=\" + (Crop as Model).Name);\r\n        }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void DoManagement(object sender, EventArgs e)\r\n        {\r\n            accumulatedRain.Update();\r\n            //FIXME test if sequencer...\r\n            //if (canEnter > 0)\r\n            //    OnEnter();\r\n\r\n            //if (canLeave > 0)\r\n            //    OnLeave();\r\n        }\r\n\r\n   // Test whether we can sow a crop today\r\n   // +ve number - yes\r\n   // 0          - no\r\n   // -ve number - no, out of scope (planting window)\r\n   [Units(\"0-1\")]\r\n   public int canEnter  {\r\n      get {\r\n         if (!afterInit) {return (0);}\r\n         bool isPossibleToday = false;\r\n         bool inWindow = DateUtilities.WithinDates(StartDate, Clock.Today, EndDate);\r\n         bool endOfWindow = DateUtilities.DatesEqual(EndDate, Clock.Today);\r\n         if (! Crop.IsAlive &&\r\n             inWindow &&\r\n             accumulatedRain.Sum > MinRain &&\r\n             MathUtilities.Sum(Soil.SoilWater.ESW) > MinESW) \r\n            isPossibleToday = true;\r\n\r\n         //Summary.WriteMessage(this, \"canEnter:\" + isPossibleToday);\r\n\r\n\t     if (isPossibleToday)\r\n            return 1;\r\n         \r\n         if (! Crop.IsAlive && endOfWindow && MustSow == yesNoType.yes) \r\n            return 1;\r\n\r\n         if (! Crop.IsAlive && ! inWindow)\r\n            return -1;\r\n         return 0;\r\n      }\r\n      set {}\r\n   }\r\n\r\n   [EventSubscribe(\"Enter\")]\r\n   private void Enter ()  {\r\n      Summary.WriteMessage(this, Apsim.FullPath(this) + \" -  sowing \" + (Crop as Model).Name);\r\n      Crop.Sow(population:Population, cultivar:CultivarName, depth:SowingDepth, rowSpacing:RowSpacing);    \r\n   }\r\n\r\n   [Units(\"0-1\")] \r\n   public int canLeave  {\r\n      get {\r\n        if (!afterInit) { return (0); }\r\n        //Summary.WriteMessage(this, \"canLeave:\" + Crop.IsReadyForHarvesting);\r\n        return(Crop.IsReadyForHarvesting ? 1 : 0);\r\n      }\r\n      set{}\r\n   } \r\n\r\n   [EventSubscribe(\"Leave\")]\r\n   private void Leave ()  {\r\n      Crop.Harvest();\r\n      Crop.EndCrop();    \r\n   }\r\n  }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": ".Simulations.Wheat Maize Rotation1.Field.Maize"
                },
                {
                  "Key": "StartDate",
                  "Value": "10-oct"
                },
                {
                  "Key": "EndDate",
                  "Value": "10-nov"
                },
                {
                  "Key": "MinESW",
                  "Value": "100"
                },
                {
                  "Key": "MinRain",
                  "Value": "25"
                },
                {
                  "Key": "RainDays",
                  "Value": "7"
                },
                {
                  "Key": "MustSow",
                  "Value": "yes"
                },
                {
                  "Key": "CultivarName",
                  "Value": "Katumani"
                },
                {
                  "Key": "SowingDepth",
                  "Value": "30"
                },
                {
                  "Key": "RowSpacing",
                  "Value": "500"
                },
                {
                  "Key": "Population",
                  "Value": "4"
                },
                {
                  "Key": "canEnter",
                  "Value": "0"
                },
                {
                  "Key": "canLeave",
                  "Value": "0"
                }
              ],
              "Name": "SowingRule2",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.RotBubbleChart, Models",
              "InitialState": "Node 1",
              "Nodes": [
                {
                  "$type": "Models.RotBubbleChart+StateNode, Models",
                  "NodeName": "red",
                  "Name": "Node 1",
                  "Location": "485, 171",
                  "Colour": "245, 245, 220",
                  "OutlineColour": "0, 0, 0",
                  "Transparent": false
                },
                {
                  "$type": "Models.RotBubbleChart+StateNode, Models",
                  "NodeName": "purple",
                  "Name": "Node 2",
                  "Location": "105, 196",
                  "Colour": "245, 245, 220",
                  "OutlineColour": "0, 0, 0",
                  "Transparent": false
                }
              ],
              "Arcs": [
                {
                  "$type": "Models.RotBubbleChart+RuleAction, Models",
                  "testCondition": [
                    "[SowingRule2].Script.canLeave"
                  ],
                  "action": [
                    "[SowingRule2].Script.Leave"
                  ],
                  "SourceName": "Node 2",
                  "DestinationName": "Node 1",
                  "Location": "269, 55",
                  "Colour": "255, 255, 0",
                  "Name": "Arc 1"
                },
                {
                  "$type": "Models.RotBubbleChart+RuleAction, Models",
                  "testCondition": [
                    "[SowingRule2].Script.canEnter"
                  ],
                  "action": [
                    "[SowingRule2].Script.Enter"
                  ],
                  "SourceName": "Node 1",
                  "DestinationName": "Node 2",
                  "Location": "307, 287",
                  "Colour": "255, 255, 0",
                  "Name": "Arc 3"
                }
              ],
              "currentState": null,
              "Name": "RotBubbleChart",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": "Yield (kg/ha)",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "DisabledSeries": [],
          "Name": "Yield Time Series",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "WheatYield",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Wheat Yield",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -11094807,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "MaizeYield",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Maize Yield",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "IncludeInDocumentation": true,
  "Enabled": true,
  "ReadOnly": false
}