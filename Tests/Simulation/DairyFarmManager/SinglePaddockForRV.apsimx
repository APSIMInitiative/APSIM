<?xml version="1.0" encoding="utf-8"?>
<Simulations xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="37">
  <Name>Simulations</Name>
  <DataStore>
    <Name>DataStore</Name>
    <IncludeInDocumentation>true</IncludeInDocumentation>
    <Enabled>true</Enabled>
  </DataStore>
  <Simulation>
    <Name>SinglePaddockForRV</Name>
    <Clock>
      <Name>Clock</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
      <StartDate>2000-07-30T00:00:00</StartDate>
      <EndDate>2007-07-29T00:00:00</EndDate>
    </Clock>
    <Summary>
      <Name>SummaryFile</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
    </Summary>
    <SoilArbitrator>
      <Name>SoilArbitrator</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
    </SoilArbitrator>
    <Weather>
      <Name>Weather</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
      <FileName>%root%\Examples\WeatherFiles\lincoln.met</FileName>
      <ExcelWorkSheetName />
    </Weather>
    <Operations>
      <Name>Operations</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
      <Operation>
        <Date>1999-08-10</Date>
        <Action>[BasicCowManagement].Script.SetNumbers(500, "OneBigPaddock")</Action>
        <Enabled>true</Enabled>
      </Operation>
      <Operation>
        <Date>1999-11-15</Date>
        <Action>[BasicCowManagement].Script.MateCows("KiwiCross", 42)</Action>
        <Enabled>true</Enabled>
      </Operation>
      <Operation>
        <Date>2001-04-30</Date>
        <Action>[BasicCowManagement].Script.DryOffAllCows();</Action>
        <Enabled>true</Enabled>
      </Operation>
    </Operations>
    <Stock>
      <Name>Stock</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
      <RandSeed>9999</RandSeed>
      <GenoTypes>
        <StockGeno>
          <Conception>
            <double>0</double>
            <double>0.99</double>
            <double>0</double>
            <double>0</double>
          </Conception>
          <Name>FriesianTest</Name>
          <DamBreed>Friesian</DamBreed>
          <SireBreed />
          <Generation>0</Generation>
          <SRW>550</SRW>
          <DeathRate>0.02</DeathRate>
          <RefFleeceWt>0</RefFleeceWt>
          <MaxFibreDiam>0</MaxFibreDiam>
          <FleeceYield>0</FleeceYield>
          <PeakMilk>30</PeakMilk>
          <WnrDeathRate>0.02</WnrDeathRate>
        </StockGeno>
      </GenoTypes>
      <Sheep />
      <Cattle />
      <PaddockList>
        <PaddockInit>
          <Forages />
          <Name />
          <Area>1</Area>
          <Slope>0</Slope>
        </PaddockInit>
      </PaddockList>
      <EnterpriseList />
      <GrazingPeriods />
    </Stock>
    <Manager>
      <Name>BasicCowManagement</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
      <Script>
        <StockingRate>4</StockingRate>
        <CurrentLocation>OneBigPaddock</CurrentLocation>
        <DateCowsBackToFarm>30-jul</DateCowsBackToFarm>
        <DateCowsDriedOff>28-apr</DateCowsDriedOff>
        <DateCowsAwayFromFarm>01-may</DateCowsAwayFromFarm>
        <OfferSilageTrigger>1800</OfferSilageTrigger>
        <OfferSilageAmount>10</OfferSilageAmount>
        <CutPastureTrigger>4000</CutPastureTrigger>
        <CutPastureResidual>2500</CutPastureResidual>
        <NumCows>3</NumCows>
        <FarmArea>0</FarmArea>
      </Script>
      <Code><![CDATA[using System;
using Models.Core;
using Models.Utilities;
using Models.GrazPlan;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;
using Models.PMF;
using Models.Soils;
using System.Collections;
using System.Collections.Generic;
using Models.AgPasture;
using System.Diagnostics;

namespace Models
{

    [Serializable]
    public class Script : Model
    {
        [Link] Clock Clock;
        [Link] Stock Cows;
        [Link] Supplement Feed;
        [Link] Zone[] Paddocks;
        [Link] ISummary summary = null;

        [Serializable]
        public class PaddockInfo
        {
            public string paddockName;
            public double harvestableBiomass;
            public double totalBiomass;
            public int paddockNum;
            public double paddockArea;
        }

         //GrazingSeasonIsOpen = !DateUtilities.WithinDates(NoGrazeStart, Clock.Today, NoGrazeEnd);
        [Separator("With this component, the simulation should start when the cows are away from the farm (the day they come back is fine)")]

        [Description("Whole-farm stocking rate (head/ha): ")] public double StockingRate { get; set; }
        [Description("Initial location of the cows (paddock name): ")] public string CurrentLocation { get; set; }

        [Description("Date to bring cows back to the farm (dd-mmm): ")] public string DateCowsBackToFarm { get; set; }
        [Description("Date to dry the cows off (dd-mmm): ")] public string DateCowsDriedOff { get; set; }
        [Description("Date to send away from the farm (dd-mmm): ")] public string DateCowsAwayFromFarm { get; set; }

        [Description("Pasture biomass which to start feeding silage (kg DM /ha): ")] public double OfferSilageTrigger { get; set; }
        [Description("Amount of silage to be offered (kg DM /cow /day): ")] public double OfferSilageAmount { get; set; }

        [Description("Pasture biomass which to cut pasture (kg DM /ha): ")] public double CutPastureTrigger { get; set; }
        [Description("Post-cutting pasture residual biomass (kg DM /ha): ")] public double CutPastureResidual { get; set; }

        public int NumCows { get; set; } // number of cows on the whole farm
        public double FarmArea { get; set; }

        private int group_count; // how many groups are there in the simulation
        private int g = 1;      // index to the groups of animals
        private int CurrentLocationNum; 
        private int NumPaddocks = 1;

        private int DurationOfPastureAccum = 7;
        private double[] PastureAccum;
        private double PastureAccum7;
        private int ValidValues;
        private double BiomassCut;

        public event BiomassRemovedDelegate BiomassRemoved;
        List<PaddockInfo> listOfPaddockInfo = new List<PaddockInfo>();


        [EventSubscribe("StartOfSimulation")]
        private void OnStartOfSimulation(object sender, EventArgs e)
        {
            summary.WriteMessage(this, "Initialising the paddock information");

            GetFarmAreaAndOtherInfo();

            //NumCows = (int)(Math.Round(StockingRate * FarmArea, 0));
            NumCows = Cows.NumberAll;

            summary.WriteMessage(this, "     The area of the whole farm is " + FarmArea + " ha");

            PastureAccum = new double[DurationOfPastureAccum]; 
            for (int i = 0; i < DurationOfPastureAccum; i++)
            	PastureAccum[i] = -999.9;
        }

        [EventSubscribe("DoManagement")]
        private void OnDoManagement(object sender, EventArgs e)
        {
        	// see if it is time to bring stock into the simulation
        	if(DateUtilities.DatesEqual(DateCowsBackToFarm, Clock.Today))
        	{
	            SetInitialCowStuff();
    	        if (NumCows > 0)
        	    	Cows.Move(g, CurrentLocation);
        	    NumCows = Cows.NumberAll;
        		summary.WriteMessage(this, "     Time to bring the cows back to the farm ");
	            summary.WriteMessage(this, "     The number of cows has been rounded to " + NumCows + " from " + (StockingRate * FarmArea));
	            summary.WriteMessage(this, "     The cows will begin in " + CurrentLocation + " which is paddock number " + CurrentLocationNum + " in the simulation");
        	}

        	// see if it is time to dry the cows off
        	if(DateUtilities.DatesEqual(DateCowsDriedOff, Clock.Today))
        	{
	            DryOffAllCows();
	            NumCows = Cows.NumberAll;
	            summary.WriteMessage(this, "     The cows have been dried off");
        	}

        	// see if it is time to send the stock away
        	if(DateUtilities.DatesEqual(DateCowsAwayFromFarm, Clock.Today))
        	{
	            SetNumbers(0, CurrentLocation);
        	    	Cows.Move(g, CurrentLocation);
        	    NumCows = Cows.NumberAll;
        		summary.WriteMessage(this, "     The cows have been removed from the farm");
        	}


            if (Cows.NumberAll > 0)  // only manage stock if there are stock in the simulation!
            {
                UpdatePaddockInfo();

                // remove the calves at two days
                if (Cows.LactatingAll >= 2.0)
                	WeanAndSellCalves();

                // calculate average pasture biomass for the last 7 days
                // first shuffle the old data down the array (so start a 1 not 0) and then add in the new data to index 0
	        	for (int i = 1; i < DurationOfPastureAccum; i++)
    	    		PastureAccum[i] = PastureAccum[i-1];
        		PastureAccum[0] = listOfPaddockInfo[CurrentLocationNum].harvestableBiomass;
     	    	// figure out how many valid values there are on the way, accumulate the valid values
        		PastureAccum7 = 0.0;
        		ValidValues = 0;
	        	for (int i = 0; i < DurationOfPastureAccum; i++)
    	    	{
        			if (PastureAccum[i] > 0.0)
        			{
		        		PastureAccum7 += PastureAccum[i];
    		    		ValidValues += 1;
	        		}
    	    	}

                if ((PastureAccum7 / ValidValues) <= OfferSilageTrigger)
                	Feed.Feed("silage", OfferSilageAmount * Cows.NumberAll, CurrentLocation, true);
                else if ((PastureAccum7 / ValidValues) >= CutPastureTrigger)
                {
                	BiomassCut = 0.0;
                	CutThePasture(CutPastureResidual);
                	UpdatePaddockInfo();
                }

                                                //Cows.Sell(g, 0.1 * Cows.NumberAll);

        	}
        }


        public void SetInitialCowStuff()
        {
        	//if (NumCows > 0)
        	//{
            g = Cows.NoGroups + 1;

            StockBuy purchase = new StockBuy();
            purchase.Genotype = "FriesianTest";
            purchase.Number = (int)(Math.Round(StockingRate * FarmArea, 0));
            purchase.Sex = "cows";
            purchase.Age = 48;       // age in months
            purchase.Weight = 550.0;  // live weight in kg
            purchase.UseTag = g + 1;
            purchase.MatedTo = "FriesianTest";
            purchase.Pregnant = 282;  // days pregnant, 0 = non pregnant, 1 = pregnant; gestation is 284 days
            purchase.Lactating = 0;  // 0 for dry, 1 for lactating
            purchase.NumYoung = 0;
            //purchase.YoungWt = 45;

            Cows.Buy(purchase);

            NumCows += (int)(Math.Round(StockingRate * FarmArea, 0));
            //}
        }

        public void ChangeNumbers(int NumToChange, string MyPaddockName)
        {
        	if (NumToChange > 0)
        	{
	            int gg = Cows.NoGroups + 1;

	            StockBuy purchase = new StockBuy();
	            purchase.Genotype = "FriesianTest";
	            purchase.Number = NumToChange;
	            purchase.Sex = "cows";
	            purchase.Age = Cows.AgeAll;       // age in months
	            purchase.Weight = Cows.WeightAll;  // live weight in kg
	            purchase.UseTag = gg + 1;
	            purchase.MatedTo = "FriesianTest";
	            purchase.Pregnant = Convert.ToInt32(Cows.PregnantAll);  // days pregnant, 0 = non pregnant, 1 = pregnant
	            purchase.Lactating = Convert.ToInt32(Cows.LactatingAll);  // 0 for dry, 1 for lactating
	            purchase.NumYoung = 0;
	            //purchase.YoungWt = 45;

	            Cows.Buy(purchase);
	            Cows.Move(gg, MyPaddockName);

	            NumCows =+ NumToChange;

	            WeanAndSellCalves();
        	}
        	else if (NumToChange < 0)
        	{
        		Cows.Sell(0, NumToChange * -1);
        	}
        }

        public void SetNumbers(int NumToChange, string MyPaddockName)
        {
        	if ((NumToChange - Cows.NumberAll) > 0)
        	{
	            int gg = Cows.NoGroups + 1;

	            StockBuy purchase = new StockBuy();
	            purchase.Genotype = "FriesianTest";
	            purchase.Number = (NumToChange - Cows.NumberAll);
	            purchase.Sex = "cows";
	            purchase.Age = Cows.AgeAll;       // age in months
	            purchase.Weight = Cows.WeightAll;  // live weight in kg
	            purchase.UseTag = gg + 1;
	            purchase.MatedTo = "FriesianTest";
	            purchase.Pregnant = Convert.ToInt32(Cows.PregnantAll);  // days pregnant, 0 = non pregnant, 1 = pregnant
	            purchase.Lactating = Convert.ToInt32(Cows.LactatingAll);  // 0 for dry, 1 for lactating
	            purchase.NumYoung = 2;
	            //purchase.YoungWt = 45;

	            Cows.Buy(purchase);
	            Cows.Move(gg, MyPaddockName);

	            //NumCows = 

	            //WeanCalves();
        	}
        	else if ((NumToChange - Cows.NumberAll) < 0)
        	{
        		Cows.Sell(0, (NumToChange - Cows.NumberAll) * -1);
        	}
        }

        public void MateCows(string MateTo, int MatingDuration)
        {
	            MateTo = "Friesian";  // later on replace this with something sensible
	            Cows.Join(0, MateTo, MatingDuration);
        }

        public void WeanAndSellCalves()
        {
	            StockWean wean = new StockWean();

	            wean.Group = 0;
	            wean.Sex = "all";
	            wean.Number = Cows.NumberYngAll;

	            Cows.Wean(wean);
	            for (int ii = 1; ii <= Cows.NoGroups; ii++)
	            {
	            	if (Cows.Age[ii-1] < 300)
	            		Cows.Sell(ii, Cows.Number[ii-1]);
	            }


        }

        public void DryOffAllCows()
        {

	            Cows.DryOff(0, 999);
	            //Cows.DryOff(0, Cows.NumberAll);
	            summary.WriteMessage(this, "drying off");
	            //StockDryoff dryoff = new StockDryoff();

	            //dryoff.Group = 0;
	            //dryoff.Number = Cows.NumberAll;

	            //Cows.DryOff(dryoff);
        }

        public void GetFarmAreaAndOtherInfo()
        {
            NumPaddocks = 0;
            FarmArea = 0.0;
            CurrentLocationNum = 0;

            foreach (Zone paddock in Paddocks)
            {
                NumPaddocks += 1;

                PaddockInfo paddockInfo = new PaddockInfo();

                paddockInfo.paddockName = paddock.Name;
                paddockInfo.paddockNum = NumPaddocks - 1;
                paddockInfo.paddockArea = paddock.Area;

                paddockInfo.harvestableBiomass = 0.0;
                paddockInfo.totalBiomass = 0.0;
                foreach (PastureSpecies plant in Apsim.Children(paddock, typeof(PastureSpecies)))
                {
                	paddockInfo.harvestableBiomass += plant.HarvestableWt;
                	paddockInfo.totalBiomass += plant.AboveGroundWt;
                }
                    

                listOfPaddockInfo.Add(paddockInfo);

                FarmArea += paddock.Area;
                if (paddock.Name == CurrentLocation)
                    CurrentLocationNum = paddockInfo.paddockNum;

                summary.WriteMessage(this, "     Paddock " + NumPaddocks + " is called " + paddock.Name + ", has an area of " + paddock.Area + " ha and an initial harvestable biomass of " + paddockInfo.harvestableBiomass + " kg DM / ha");

            }

        }

        public void UpdatePaddockInfo()
        {
            int ii = -1;

            foreach (Zone paddock in Paddocks)
            {
                ii += 1;
                listOfPaddockInfo[ii].harvestableBiomass = 0.0;
                listOfPaddockInfo[ii].totalBiomass = 0.0;
                foreach (PastureSpecies plant in Apsim.Children(paddock, typeof(PastureSpecies)))
                {
                    listOfPaddockInfo[ii].harvestableBiomass += plant.HarvestableWt;
                    listOfPaddockInfo[ii].totalBiomass += plant.AboveGroundWt;
                }

            }

        }


        private void CutThePasture(double CuttingResidual)
        {
            // Remove a proportion of required DM from each species
            BiomassCut = 0.0;

            // get the proprtion of the biomass to remove
            int ii = -1;
            int NumSpecies = -1;
            foreach (Zone paddock in Paddocks)  // but noting that there is only one zone
            {
                ii += 1;
	            double PropBiomassToRemove = MathUtilities.Divide((listOfPaddockInfo[ii].totalBiomass - CuttingResidual), listOfPaddockInfo[ii].totalBiomass, 0.0);
	            foreach (PastureSpecies species in Apsim.Children(paddock, typeof(PastureSpecies)))
    	        {
        	        double amountToRemove = Math.Min(PropBiomassToRemove * species.AboveGroundWt, species.HarvestableWt);
            	    species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
                	BiomassCut += species.HarvestedWt;
    	        }
            }
        }
    }
}
]]></Code>
    </Manager>
    <Supplement>
      <Name>Supplement</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
      <SpoilageTime>0</SpoilageTime>
      <Stores>
        <StoreType>
          <IsRoughage>true</IsRoughage>
          <DMContent>0.85</DMContent>
          <DMD>0</DMD>
          <MEContent>0</MEContent>
          <CPConc>0</CPConc>
          <ProtDg>0</ProtDg>
          <PConc>0</PConc>
          <SConc>0</SConc>
          <EEConc>0</EEConc>
          <ADIP2CP>0</ADIP2CP>
          <AshAlk>0</AshAlk>
          <MaxPassage>0</MaxPassage>
          <Name>fodder</Name>
          <Stored>0</Stored>
        </StoreType>
        <StoreType>
          <IsRoughage>true</IsRoughage>
          <DMContent>1</DMContent>
          <DMD>0.75</DMD>
          <MEContent>12</MEContent>
          <CPConc>0.18</CPConc>
          <ProtDg>0.8</ProtDg>
          <PConc>0.0032</PConc>
          <SConc>0.0024</SConc>
          <EEConc>0.02</EEConc>
          <ADIP2CP>0.06</ADIP2CP>
          <AshAlk>0.6</AshAlk>
          <MaxPassage>0</MaxPassage>
          <Name>silage</Name>
          <Stored>20000000</Stored>
        </StoreType>
      </Stores>
      <PaddockList />
    </Supplement>
    <Report>
      <Name>ReportRV</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
      <ExperimentFactorNames />
      <ExperimentFactorValues />
      <VariableNames>
        <string>[Clock].Today</string>
        <string>[Stock].NumberYngAll</string>
        <string>[Stock].PregnantAll</string>
        <string>[Stock].LactatingAll</string>
        <string>[Stock].NumberAll as NumCows</string>
        <string>[Stock].IntakeAll.Weight as AveDMI</string>
        <string>[Stock].IntakeAll.Weight * [Stock].NumberAll  as HerdDMI</string>
        <string>[Stock].MEIntakeAll as AveMEIntake</string>
        <string>[Stock].WeightAll as AveBodyWeight</string>
        <string>[Stock].CondScoreAll as AveCS</string>
        <string>[Stock].MilkWtAll as AveMilkWeight</string>
        <string>sum([Supplement].PaddAmounts) as SuppsRemaining</string>
        <string>sum([Supplement].SuppToStock) as SuppsFed</string>
        <string>[Stock].Age</string>
        <string>[Stock].SuppIntakeAll.Weight as SuppIntake</string>
        <string>([Stock].IntakeAll.Weight - [Stock].SuppIntakeAll.Weight) as PastureIntake</string>
        <string>[Stock].Paddock as StockInPaddockName</string>
      </VariableNames>
      <EventNames>
        <string>[Clock].EndOfDay</string>
      </EventNames>
    </Report>
    <Folder>
      <Name>Folder</Name>
      <Graph>
        <Name>NumCows</Name>
        <Series>
          <Name>Num Cows</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16777216</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>NumCows</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <Series>
          <Name>Num Calves</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-11094807</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>Stock.NumberYngAll</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <IncludeInDocumentation>false</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <Axis>
          <Type>Bottom</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopLeft</LegendPosition>
        <DisabledSeries />
      </Graph>
      <Graph>
        <Name>BodyWt and CS</Name>
        <Series>
          <Name>BodyWeight</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Right</YAxis>
          <ColourArgb>-16777216</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>AveBodyWeight</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <Series>
          <Name>ConditionScore</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>AveCS</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <IncludeInDocumentation>false</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <Axis>
          <Type>Bottom</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Right</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopLeft</LegendPosition>
        <DisabledSeries />
      </Graph>
      <Graph>
        <Name>CowStatus</Name>
        <Series>
          <Name>Preg</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16777216</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>Stock.PregnantAll</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <Series>
          <Name>Lactation</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>Stock.LactatingAll</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <IncludeInDocumentation>false</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <Axis>
          <Type>Bottom</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopLeft</LegendPosition>
        <DisabledSeries />
      </Graph>
      <Graph>
        <Name>MilkProduction</Name>
        <Series>
          <Name>MilkProduction</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16777216</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>AveMilkWeight</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <Series>
          <Name>IntakeHerd</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Right</YAxis>
          <ColourArgb>-1663232</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>HerdDMI</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <Series>
          <Name>IntakeCow</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-11094807</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>AveDMI</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <IncludeInDocumentation>false</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <Axis>
          <Type>Bottom</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Right</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopLeft</LegendPosition>
        <DisabledSeries />
      </Graph>
      <Graph>
        <Name>Feed</Name>
        <Series>
          <Name>SuppsStore</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Right</YAxis>
          <ColourArgb>-16777216</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>SuppsRemaining</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <Series>
          <Name>Pasture</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-1663232</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportPaddock</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>HarvestableWt</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <IncludeInDocumentation>false</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <Axis>
          <Type>Bottom</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Right</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopLeft</LegendPosition>
        <DisabledSeries />
      </Graph>
      <Graph>
        <Name>Intake</Name>
        <Series>
          <Name>PasturePlusSuppsEaten</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-1663232</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>AveDMI</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <Series>
          <Name>PastureEaten</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16747854</ColourArgb>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <Checkpoint>Current</Checkpoint>
          <TableName>ReportRV</TableName>
          <XFieldName>Clock.Today</XFieldName>
          <YFieldName>PastureIntake</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <IncludeInDocumentation>false</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <Axis>
          <Type>Bottom</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopLeft</LegendPosition>
        <DisabledSeries />
      </Graph>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
      <ShowPageOfGraphs>true</ShowPageOfGraphs>
    </Folder>
    <Zone>
      <Name>OneBigPaddock</Name>
      <Folder>
        <Name>Managers</Name>
        <Manager>
          <Name>AutomaticFertiliser</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Script>
            <AllowFertiliser>yes</AllowFertiliser>
            <Depth2SoilN>500</Depth2SoilN>
            <CriticalSoilN>5</CriticalSoilN>
            <FertNAmount>25</FertNAmount>
            <FertType>UreaN</FertType>
            <FertApplicationDepth>1</FertApplicationDepth>
            <FertMinimumDays>15</FertMinimumDays>
          </Script>
          <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
    [Serializable]
    public class Script : Model
    {
        [Link] Clock Clock;
        [Link] Fertiliser fertiliser;
        [Link] ISummary summary = null;
        [Link] Soil Soil;

        //User inputs from properties tab
        [Description("Turn ferliser applications on? ")]
        public yesnoType AllowFertiliser { get; set; }
        
        [Description("Depth to calculate available soil N (mm): ")]
        public double Depth2SoilN { get; set; }

        [Description("Minimum available N, triggers an application (kgN/ha): ")]
        public double CriticalSoilN { get; set; }

        [Description("Amount of N fertiliser for each application (kgN/ha): ")]
        public double FertNAmount { get; set; }

        [Description("Type of N fertiliser to apply: ")]
        public Fertiliser.Types FertType { get; set; }

        [Description("Depth at which to apply the fertiliser (mm): ")]
        public double FertApplicationDepth { get; set; }
       
        [Description("Minimum period between applications (days): ")]
        public double FertMinimumDays { get; set; }
       
        public enum yesnoType
        {
            /// <summary>a positive answer</summary>
            yes,
            /// <summary>a negative answer</summary>
            no
        }

        [XmlIgnore] public double TopMineralN { get; set; }
        
        private DateTime lastApplicationDate;
        private bool fertiliserIsAllowed;
        private int nLayers;

        [EventSubscribe("StartOfSimulation")]
        private void OnStartOfSimulation(object sender, EventArgs e)
        {
            fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
            nLayers = Soil.Thickness.Length;
        }

        [EventSubscribe("DoManagement")]
        private void OnDoManagement(object sender, EventArgs e)
        {
            double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
            
            // get the N stored in the soil
            double depthFromSurface = 0.0;
            double fracLayer = 0.0;
            TopMineralN = 0.0;
            for (int layer = 0; layer < nLayers; layer++)
            {
                fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.Thickness[layer]);
                TopMineralN += (Soil.SoilNitrogen.NO3[layer]
                + Soil.SoilNitrogen.NH4[layer]
                + Soil.SoilNitrogen.urea[layer])
                * fracLayer;
                depthFromSurface += Soil.Thickness[layer];
                if (depthFromSurface >= Depth2SoilN)
                    layer = nLayers;
            }

            if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
            {
                fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
                lastApplicationDate = Clock.Today;
            }
        }
    }
}
]]></Code>
        </Manager>
        <Manager>
          <Name>AutomaticIrrigation</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Script>
            <allowIrrigation>True</allowIrrigation>
            <seasonStart>15-Aug</seasonStart>
            <seasonEnd>30-May</seasonEnd>
            <seasonsAllocation>10000</seasonsAllocation>
            <triggerDeficit>75</triggerDeficit>
            <targetDeficit>99</targetDeficit>
            <returndays>1</returndays>
            <maximumAmount>30</maximumAmount>
            <depthPAWC>300</depthPAWC>
          </Script>
          <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
    [Serializable] 
    [System.Xml.Serialization.XmlInclude(typeof(Model))]
    public class Script : Model
    {
        //Communication to other modules
        [Link] ISummary summary = null;
        [Link] Irrigation Irrigation;
        [Link] Clock Clock;
        [Link] Soil Soil;
        [Link(IsOptional = true)] IPlant existingCrop;
       
        //User inputs from properties tab
        [Description("Turn irrigation on?")]
        public bool allowIrrigation { get; set; }
        [Description("Start of irrigation season (dd-MMM)")]
        public string seasonStart { get; set; }
        [Description("End of irrigation season (dd-MMM)")]
        public string seasonEnd { get; set; }
        [Description("Season allocation (mm)")]
        public double seasonsAllocation { get; set; }
        [Description("Deficit to trigger irrigation (% PAWC)")]
        public double triggerDeficit { get; set; }
        [Description("Deficit to stop irrigaton (% PAWC)")]
        public double targetDeficit { get; set; }
        [Description("Minimum days for irrigation to return")]
        public double returndays { get; set; }
        [Description("Maximum irrigation application (mm/day)")]
        public double maximumAmount { get; set; }
        [Description("Depth to calculate PAWC (mm)")]
        public double depthPAWC { get; set; }

        //Class members
        [XmlIgnore] public double TopSWdeficit { get; set; }
        [XmlIgnore] public double TopSWC { get; set; }
        [XmlIgnore] public double DaysSinceIrrigation { get; set; }
        [XmlIgnore] public double AmountToApply { get; set; }
        [XmlIgnore] public double SeasonAppliedAmount { get; set; }
        
        private bool IrrigationIsAllowed { get; set; }
        private bool SeasonIsOpen { get; set; }
        private bool CropIsActive { get; set; }
        private bool IrrigatorIsAvailable { get; set; }
        private bool SoilIsDry { get; set; }

        private DateTime StartDate;
        private DateTime EndDate;
        private double TopDUL;
        private double TopLL;
        private int nLayers;
    
        //Calculate static soil variables
        [EventSubscribe("StartOfSimulation")]
        private void OnStartOfSimulation(object sender, EventArgs e)
        {   
            //Set the season dates
            StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
            EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
            
            //Can we irrigate at all?
            IrrigationIsAllowed = false; 
            if (allowIrrigation)
                IrrigationIsAllowed = true; 

            //Calculate soil water variables
            double depthFromSurface = 0.0;
            double fracLayer = 0.0;
            nLayers = Soil.Thickness.Length;
            for (int layer = 0; layer < nLayers; layer++)
            {
                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);
                TopLL += Soil.LL15mm[layer] * fracLayer;
                TopDUL += Soil.DULmm[layer] * fracLayer;
                depthFromSurface += Soil.Thickness[layer];
                if (depthFromSurface >= depthPAWC)
                    layer = nLayers;
            }
        }
             
        //Determine daily requirement for irrigation
        [EventSubscribe("StartOfDay")]
        private void OnStartOfDay(object sender, EventArgs e)
        {
            //Can we irrigate today?          
            SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

            //Is there a crop in the ground that needs irrigation?
            CropIsActive = false;
            if ((existingCrop != null) && (existingCrop.IsAlive))
                CropIsActive = true;
            //if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
          
            //Is the irrigator available?
            IrrigatorIsAvailable = false;
            DaysSinceIrrigation += 1;
            if (DaysSinceIrrigation >= returndays)
                IrrigatorIsAvailable = true;
          
            //Is the soil dry enough to require irrigation?
            SoilIsDry = false;
            double depthFromSurface = 0.0;
            double fracLayer = 0.0;
            TopSWC = 0.0;
            for (int layer = 0; layer < nLayers; layer++)
            //for (int layer = 0; depthFromSurface < depthPAWC + Soil.Thickness[layer]; layer++)
            {
                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);
                TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
                depthFromSurface += Soil.Thickness[layer];
                if (depthFromSurface >= depthPAWC)
                    layer = nLayers;
            }
            
            TopSWdeficit = TopSWC - TopDUL;
            if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
                SoilIsDry = true;
                
            //Are all the conditions ratifying irrigation
            if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
            {
                //Lets bloody well irrigate then!!!!
                AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
                AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
                Irrigation.Apply(AmountToApply);
                DaysSinceIrrigation = 0;
                SeasonAppliedAmount += AmountToApply;
            }
        }
        
        ///Checks whether theDate is between iniDate and endDate (non-year specific)
        private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
        {
            bool result = false;
            if (iniDate.DayOfYear < endDate.DayOfYear)
            {
                // period is within one year, ex: summer in the northern hemisphere
                if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
                    result = true;
            }
            else
            {
                // period goes over the end of the year, ex: summer in the southern hemisphere
                if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
                    result = true;
            }
            
            return result;
        }
    }
}
]]></Code>
        </Manager>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <ShowPageOfGraphs>true</ShowPageOfGraphs>
      </Folder>
      <MicroClimate>
        <Name>MicroClimate</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <a_interception>0</a_interception>
        <b_interception>0</b_interception>
        <c_interception>0</c_interception>
        <d_interception>0</d_interception>
        <soil_albedo>0.23</soil_albedo>
        <SoilHeatFluxFraction>0</SoilHeatFluxFraction>
        <NightInterceptionFraction>0</NightInterceptionFraction>
        <ReferenceHeight>0</ReferenceHeight>
      </MicroClimate>
      <Irrigation>
        <Name>Irrigation</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
      </Irrigation>
      <Fertiliser>
        <Name>Fertiliser</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
      </Fertiliser>
      <SurfaceOrganicMatter>
        <Name>SurfaceOrganicMatter</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <ResourceName>SurfaceOrganicMatter</ResourceName>
        <InitialResidueName>Sward</InitialResidueName>
        <InitialResidueType>grass</InitialResidueType>
        <InitialResidueMass>1000</InitialResidueMass>
        <InitialStandingFraction>0</InitialStandingFraction>
        <InitialCPR>0</InitialCPR>
        <InitialCNR>15</InitialCNR>
      </SurfaceOrganicMatter>
      <PastureSpecies>
        <Name>Ryegrass</Name>
        <PastureAboveGroundOrgan>
          <Name>Leaves</Name>
          <GenericTissue>
            <Name>LeafCohort1</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort2</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort3</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>Dead</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
        </PastureAboveGroundOrgan>
        <PastureAboveGroundOrgan>
          <Name>Stems</Name>
          <GenericTissue>
            <Name>LeafCohort1</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort2</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort3</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>Dead</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
        </PastureAboveGroundOrgan>
        <PastureAboveGroundOrgan>
          <Name>Stolons</Name>
          <GenericTissue>
            <Name>LeafCohort1</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort2</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort3</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>Dead</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
        </PastureAboveGroundOrgan>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <MaximumNUptake>10</MaximumNUptake>
        <Albedo>0.26</Albedo>
        <Gsmax>0.011</Gsmax>
        <R50>200</R50>
        <SpeciesFamily>Grass</SpeciesFamily>
        <PhotosyntheticPathway>C3</PhotosyntheticPathway>
        <InitialShootDM>2500</InitialShootDM>
        <InitialRootDM>450</InitialRootDM>
        <InitialRootDepth>750</InitialRootDepth>
        <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
        <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
        <GrowthTminimum>1</GrowthTminimum>
        <GrowthToptimum>20</GrowthToptimum>
        <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
        <UseHeatStressFactor>yes</UseHeatStressFactor>
        <HeatOnsetTemperature>28</HeatOnsetTemperature>
        <HeatFullTemperature>35</HeatFullTemperature>
        <HeatRecoverySumDD>30</HeatRecoverySumDD>
        <HeatRecoveryTReference>25</HeatRecoveryTReference>
        <UseColdStressFactor>yes</UseColdStressFactor>
        <ColdOnsetTemperature>1</ColdOnsetTemperature>
        <ColdFullTemperature>-5</ColdFullTemperature>
        <ColdRecoverySumDD>25</ColdRecoverySumDD>
        <ColdRecoveryTReference>0</ColdRecoveryTReference>
        <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
        <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
        <RespirationTReference>20</RespirationTReference>
        <RespirationExponent>1.5</RespirationExponent>
        <NThresholdsForLeaves>
          <double>0.04</double>
          <double>0.012</double>
          <double>0.05</double>
        </NThresholdsForLeaves>
        <NThresholdsForStems>
          <double>0.02</double>
          <double>0.006</double>
          <double>0.025</double>
        </NThresholdsForStems>
        <NThresholdsForStolons>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </NThresholdsForStolons>
        <NThresholdsForRoots>
          <double>0.02</double>
          <double>0.006</double>
          <double>0.025</double>
        </NThresholdsForRoots>
        <DegreesDayForGermination>125</DegreesDayForGermination>
        <TargetShootRootRatio>4</TargetShootRootRatio>
        <MaxRootAllocation>0.25</MaxRootAllocation>
        <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
        <UseReproSeasonFactor>yes</UseReproSeasonFactor>
        <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
        <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
        <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
        <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
        <FractionLeafMaximum>0.7</FractionLeafMaximum>
        <FractionLeafMinimum>0.7</FractionLeafMinimum>
        <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
        <FractionLeafDMFactor>2000</FractionLeafDMFactor>
        <FractionLeafExponent>3</FractionLeafExponent>
        <FractionToStolon>0</FractionToStolon>
        <SpecificLeafArea>25</SpecificLeafArea>
        <SpecificRootLength>100</SpecificRootLength>
        <StolonEffectOnLAI>0</StolonEffectOnLAI>
        <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
        <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
        <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
        <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
        <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
        <DetachmentRateShoot>0.08</DetachmentRateShoot>
        <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
        <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
        <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
        <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
        <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
        <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
        <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
        <FractionNLuxuryRemobilisable>
          <double>0.1</double>
          <double>0.1</double>
          <double>0.1</double>
        </FractionNLuxuryRemobilisable>
        <MinimumNFixation>0</MinimumNFixation>
        <MaximumNFixation>0</MaximumNFixation>
        <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
        <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
        <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
        <NDillutionCoefficient>0.25</NDillutionCoefficient>
        <GlfGeneric>1</GlfGeneric>
        <GlfSoilFertility>1</GlfSoilFertility>
        <PlantHeightMinimum>25</PlantHeightMinimum>
        <PlantHeightMaximum>600</PlantHeightMaximum>
        <PlantHeightMassForMax>10000</PlantHeightMassForMax>
        <PlantHeightExponent>2.8</PlantHeightExponent>
        <RootDepthMinimum>50</RootDepthMinimum>
        <RootDepthMaximum>750</RootDepthMaximum>
        <RootElongationRate>25</RootElongationRate>
        <RootDistributionDepthParam>90</RootDistributionDepthParam>
        <RootDistributionExponent>3.2</RootDistributionExponent>
        <DigestibilitiesCellWall>
          <double>0.6</double>
          <double>0.6</double>
          <double>0.6</double>
          <double>0.2</double>
        </DigestibilitiesCellWall>
        <MinimumGreenWt>100</MinimumGreenWt>
        <FractionStolonStanding>0</FractionStolonStanding>
        <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
        <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
        <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
        <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
      </PastureSpecies>
      <PastureSpecies>
        <Name>WhiteClover</Name>
        <PastureAboveGroundOrgan>
          <Name>Leaves</Name>
          <GenericTissue>
            <Name>LeafCohort1</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort2</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort3</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>Dead</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
        </PastureAboveGroundOrgan>
        <PastureAboveGroundOrgan>
          <Name>Stems</Name>
          <GenericTissue>
            <Name>LeafCohort1</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort2</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort3</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>Dead</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
        </PastureAboveGroundOrgan>
        <PastureAboveGroundOrgan>
          <Name>Stolons</Name>
          <GenericTissue>
            <Name>LeafCohort1</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort2</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>LeafCohort3</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <GenericTissue>
            <Name>Dead</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
          </GenericTissue>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
        </PastureAboveGroundOrgan>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <MaximumNUptake>10</MaximumNUptake>
        <Albedo>0.26</Albedo>
        <Gsmax>0.011</Gsmax>
        <R50>200</R50>
        <SpeciesFamily>Legume</SpeciesFamily>
        <PhotosyntheticPathway>C3</PhotosyntheticPathway>
        <InitialShootDM>500</InitialShootDM>
        <InitialRootDM>150</InitialRootDM>
        <InitialRootDepth>350</InitialRootDepth>
        <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
        <LightExtinctionCoefficient>0.8</LightExtinctionCoefficient>
        <GrowthTminimum>2</GrowthTminimum>
        <GrowthToptimum>22</GrowthToptimum>
        <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
        <UseHeatStressFactor>yes</UseHeatStressFactor>
        <HeatOnsetTemperature>30</HeatOnsetTemperature>
        <HeatFullTemperature>36</HeatFullTemperature>
        <HeatRecoverySumDD>20</HeatRecoverySumDD>
        <HeatRecoveryTReference>25</HeatRecoveryTReference>
        <UseColdStressFactor>yes</UseColdStressFactor>
        <ColdOnsetTemperature>2</ColdOnsetTemperature>
        <ColdFullTemperature>-5</ColdFullTemperature>
        <ColdRecoverySumDD>30</ColdRecoverySumDD>
        <ColdRecoveryTReference>0</ColdRecoveryTReference>
        <MaintenanceRespirationCoefficient>0.04</MaintenanceRespirationCoefficient>
        <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
        <RespirationTReference>20</RespirationTReference>
        <RespirationExponent>1.5</RespirationExponent>
        <NThresholdsForLeaves>
          <double>0.045</double>
          <double>0.02</double>
          <double>0.055</double>
        </NThresholdsForLeaves>
        <NThresholdsForStems>
          <double>0.0225</double>
          <double>0.01</double>
          <double>0.0275</double>
        </NThresholdsForStems>
        <NThresholdsForStolons>
          <double>0.0225</double>
          <double>0.01</double>
          <double>0.0275</double>
        </NThresholdsForStolons>
        <NThresholdsForRoots>
          <double>0.0225</double>
          <double>0.01</double>
          <double>0.0275</double>
        </NThresholdsForRoots>
        <DegreesDayForGermination>125</DegreesDayForGermination>
        <TargetShootRootRatio>4</TargetShootRootRatio>
        <MaxRootAllocation>0.25</MaxRootAllocation>
        <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
        <UseReproSeasonFactor>yes</UseReproSeasonFactor>
        <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
        <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
        <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
        <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
        <FractionLeafMaximum>0.56</FractionLeafMaximum>
        <FractionLeafMinimum>0.28</FractionLeafMinimum>
        <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
        <FractionLeafDMFactor>2000</FractionLeafDMFactor>
        <FractionLeafExponent>3</FractionLeafExponent>
        <FractionToStolon>0.2</FractionToStolon>
        <SpecificLeafArea>30</SpecificLeafArea>
        <SpecificRootLength>45</SpecificRootLength>
        <StolonEffectOnLAI>0.3</StolonEffectOnLAI>
        <ShootMaxEffectOnLAI>500</ShootMaxEffectOnLAI>
        <MaxStemEffectOnLAI>0.5</MaxStemEffectOnLAI>
        <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
        <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
        <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
        <DetachmentRateShoot>0.11</DetachmentRateShoot>
        <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
        <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
        <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
        <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
        <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
        <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
        <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
        <FractionNLuxuryRemobilisable>
          <double>0.1</double>
          <double>0.1</double>
          <double>0.1</double>
        </FractionNLuxuryRemobilisable>
        <MinimumNFixation>0.2</MinimumNFixation>
        <MaximumNFixation>0.6</MaximumNFixation>
        <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
        <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
        <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
        <NDillutionCoefficient>1</NDillutionCoefficient>
        <GlfGeneric>1</GlfGeneric>
        <GlfSoilFertility>1</GlfSoilFertility>
        <PlantHeightMinimum>25</PlantHeightMinimum>
        <PlantHeightMaximum>350</PlantHeightMaximum>
        <PlantHeightMassForMax>7500</PlantHeightMassForMax>
        <PlantHeightExponent>2.5</PlantHeightExponent>
        <RootDepthMinimum>30</RootDepthMinimum>
        <RootDepthMaximum>350</RootDepthMaximum>
        <RootElongationRate>25</RootElongationRate>
        <RootDistributionDepthParam>70</RootDistributionDepthParam>
        <RootDistributionExponent>2.5</RootDistributionExponent>
        <DigestibilitiesCellWall>
          <double>0.6</double>
          <double>0.6</double>
          <double>0.6</double>
          <double>0.2</double>
        </DigestibilitiesCellWall>
        <MinimumGreenWt>50</MinimumGreenWt>
        <FractionStolonStanding>0</FractionStolonStanding>
        <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
        <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
        <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
        <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
      </PastureSpecies>
      <Soil>
        <Name>LismoreSoil</Name>
        <Analysis>
          <Name>Analysis</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>200</double>
            <double>150</double>
            <double>250</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <Rocks>
            <double>0</double>
            <double>0</double>
            <double>10</double>
            <double>40</double>
            <double>60</double>
            <double>70</double>
            <double>70</double>
          </Rocks>
          <Texture />
          <MunsellColour />
          <PH>
            <double>6</double>
            <double>6</double>
            <double>6</double>
            <double>6</double>
            <double>6</double>
            <double>6</double>
            <double>6</double>
          </PH>
          <CEC>
            <double>12.5</double>
            <double>10</double>
            <double>9</double>
            <double>5</double>
            <double>4</double>
            <double>4</double>
            <double>4</double>
          </CEC>
          <ParticleSizeSand>
            <double>15</double>
            <double>20</double>
            <double>25</double>
            <double>35</double>
            <double>40</double>
            <double>40</double>
            <double>40</double>
          </ParticleSizeSand>
          <ParticleSizeSilt>
            <double>65</double>
            <double>65</double>
            <double>63</double>
            <double>57</double>
            <double>54</double>
            <double>55</double>
            <double>55</double>
          </ParticleSizeSilt>
          <ParticleSizeClay>
            <double>20</double>
            <double>15</double>
            <double>12</double>
            <double>8</double>
            <double>6</double>
            <double>5</double>
            <double>5</double>
          </ParticleSizeClay>
          <PHUnits>Water</PHUnits>
          <BoronUnits>HotWater</BoronUnits>
        </Analysis>
        <Water>
          <Name>Water</Name>
          <SoilCrop>
            <Name>SwardSoil</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
            <LL>
              <double>0.15</double>
              <double>0.14</double>
              <double>0.06</double>
              <double>0.02</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </LL>
            <KL>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.08</double>
              <double>0.04</double>
              <double>0.01</double>
              <double>0</double>
              <double>0</double>
            </KL>
            <XF>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>0</double>
              <double>0</double>
            </XF>
          </SoilCrop>
          <SoilCrop>
            <Name>RyegrassSoil</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
            <LL>
              <double>0.15</double>
              <double>0.14</double>
              <double>0.06</double>
              <double>0.02</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </LL>
            <KL>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.08</double>
              <double>0.04</double>
              <double>0.01</double>
              <double>0</double>
              <double>0</double>
            </KL>
            <XF>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>0</double>
              <double>0</double>
            </XF>
          </SoilCrop>
          <SoilCrop>
            <Name>WhiteCloverSoil</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
            <LL>
              <double>0.15</double>
              <double>0.14</double>
              <double>0.06</double>
              <double>0.02</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </LL>
            <KL>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.08</double>
              <double>0.04</double>
              <double>0.01</double>
              <double>0</double>
              <double>0</double>
            </KL>
            <XF>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>0</double>
              <double>0</double>
            </XF>
          </SoilCrop>
          <SoilCrop>
            <Name>Ryegrass1Soil</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <Enabled>true</Enabled>
            <LL>
              <double>0.15</double>
              <double>0.14</double>
              <double>0.06</double>
              <double>0.02</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </LL>
            <KL>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.08</double>
              <double>0.04</double>
              <double>0.01</double>
              <double>0</double>
              <double>0</double>
            </KL>
            <XF>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>0</double>
              <double>0</double>
            </XF>
          </SoilCrop>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>200</double>
            <double>150</double>
            <double>250</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <BD>
            <double>1.3</double>
            <double>1.35</double>
            <double>1</double>
            <double>0.53</double>
            <double>0.31</double>
            <double>0.3</double>
            <double>0.3</double>
          </BD>
          <AirDry>
            <double>0.05</double>
            <double>0.12</double>
            <double>0.055</double>
            <double>0.015</double>
            <double>0.01</double>
            <double>0.01</double>
            <double>0.01</double>
          </AirDry>
          <LL15>
            <double>0.15</double>
            <double>0.14</double>
            <double>0.055</double>
            <double>0.015</double>
            <double>0.01</double>
            <double>0.01</double>
            <double>0.01</double>
          </LL15>
          <DUL>
            <double>0.36</double>
            <double>0.34</double>
            <double>0.19</double>
            <double>0.065</double>
            <double>0.04</double>
            <double>0.03</double>
            <double>0.03</double>
          </DUL>
          <SAT>
            <double>0.45</double>
            <double>0.43</double>
            <double>0.25</double>
            <double>0.15</double>
            <double>0.11</double>
            <double>0.11</double>
            <double>0.11</double>
          </SAT>
          <KS>
            <double>5000</double>
            <double>2500</double>
            <double>3000</double>
            <double>10000</double>
            <double>17500</double>
            <double>20000</double>
            <double>20000</double>
          </KS>
        </Water>
        <SoilWater>
          <Name>SoilWater</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <SummerDate>1-Nov</SummerDate>
          <SummerU>6</SummerU>
          <SummerCona>3.5</SummerCona>
          <WinterDate>1-apr</WinterDate>
          <WinterU>2</WinterU>
          <WinterCona>2</WinterCona>
          <DiffusConst>88</DiffusConst>
          <DiffusSlope>35</DiffusSlope>
          <Salb>0.13</Salb>
          <CN2Bare>73</CN2Bare>
          <CNRed>20</CNRed>
          <CNCov>0.8</CNCov>
          <slope>0</slope>
          <discharge_width>0</discharge_width>
          <catchment_area>0</catchment_area>
          <max_pond>0</max_pond>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>200</double>
            <double>150</double>
            <double>250</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <SWCON>
            <double>0.5</double>
            <double>0.52</double>
            <double>0.55</double>
            <double>0.6</double>
            <double>0.65</double>
            <double>0.65</double>
            <double>0.65</double>
          </SWCON>
          <KLAT>
            <double>0</double>
            <double>0</double>
            <double>0</double>
            <double>0</double>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </KLAT>
          <ResidueInterception>0</ResidueInterception>
        </SoilWater>
        <SoilNitrogen>
          <Name>SoilNitrogen</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <fom_type>
            <string>default</string>
            <string>manure</string>
            <string>mucuna</string>
            <string>lablab</string>
            <string>shemp</string>
            <string>stable</string>
          </fom_type>
          <fract_carb>
            <double>0.2</double>
            <double>0.3</double>
            <double>0.54</double>
            <double>0.57</double>
            <double>0.45</double>
            <double>0</double>
          </fract_carb>
          <fract_cell>
            <double>0.7</double>
            <double>0.3</double>
            <double>0.37</double>
            <double>0.37</double>
            <double>0.47</double>
            <double>0.1</double>
          </fract_cell>
          <fract_lign>
            <double>0.1</double>
            <double>0.4</double>
            <double>0.09</double>
            <double>0.06</double>
            <double>0.08</double>
            <double>0.9</double>
          </fract_lign>
        </SoilNitrogen>
        <SoilOrganicMatter>
          <Name>SoilOrganicMatter</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <RootCN>40</RootCN>
          <RootWt>1000</RootWt>
          <SoilCN>12</SoilCN>
          <EnrACoeff>7.4</EnrACoeff>
          <EnrBCoeff>0.2</EnrBCoeff>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>200</double>
            <double>150</double>
            <double>250</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <Depth>
            <string>0-15</string>
            <string>15-30</string>
            <string>30-50</string>
            <string>50-65</string>
            <string>65-90</string>
            <string>90-120</string>
            <string>120-150</string>
          </Depth>
          <OC>
            <double>3</double>
            <double>1</double>
            <double>0.6</double>
            <double>0.4</double>
            <double>0.25</double>
            <double>0.15</double>
            <double>0.1</double>
          </OC>
          <FBiom>
            <double>0.04</double>
            <double>0.02</double>
            <double>0.02</double>
            <double>0.01</double>
            <double>0.01</double>
            <double>0</double>
            <double>0</double>
          </FBiom>
          <FInert>
            <double>0.5</double>
            <double>0.7</double>
            <double>0.83</double>
            <double>0.9</double>
            <double>0.95</double>
            <double>0.99</double>
            <double>0.99</double>
          </FInert>
          <OCUnits>Total</OCUnits>
        </SoilOrganicMatter>
        <InitialWater>
          <Name>Initial water</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <PercentMethod>EvenlyDistributed</PercentMethod>
          <FractionFull>0.95</FractionFull>
          <DepthWetSoil>NaN</DepthWetSoil>
        </InitialWater>
        <Sample>
          <Name>Initial nitrogen</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>200</double>
            <double>150</double>
            <double>250</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <NO3>
            <double>5</double>
            <double>2.5</double>
            <double>1</double>
            <double>0.75</double>
            <double>0.5</double>
            <double>0.5</double>
            <double>0.5</double>
          </NO3>
          <NH4>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </NH4>
          <NO3Units>ppm</NO3Units>
          <NH4Units>ppm</NH4Units>
          <SWUnits>Volumetric</SWUnits>
          <OCUnits>Total</OCUnits>
          <PHUnits>Water</PHUnits>
        </Sample>
        <CERESSoilTemperature>
          <Name>CERESSoilTemperature</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Enabled>true</Enabled>
        </CERESSoilTemperature>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <RecordNumber>0</RecordNumber>
        <SoilType>NZ_Sedimentary</SoilType>
        <LocalName>Lismore</LocalName>
        <Site>Winchmore</Site>
        <NearestTown>Ashburton</NearestTown>
        <Region>Canterbury</Region>
        <Country>New Zealand</Country>
        <NaturalVegetation />
        <Latitude>-48.48</Latitude>
        <Longitude>0</Longitude>
      </Soil>
      <SoluteManager>
        <Name>SoluteManager</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
      </SoluteManager>
      <Report>
        <Name>ReportPaddock</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Enabled>true</Enabled>
        <ExperimentFactorNames />
        <ExperimentFactorValues />
        <VariableNames>
          <string>[Clock].Today</string>
          <string>[Ryegrass].AboveGroundWt + [WhiteClover].AboveGroundWt as AboveGroundWt</string>
          <string>[Ryegrass].HarvestableWt + [WhiteClover].HarvestableWt as HarvestableWt</string>
        </VariableNames>
        <EventNames>
          <string>[Clock].EndOfDay</string>
        </EventNames>
      </Report>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Enabled>true</Enabled>
      <Area>100</Area>
      <Slope>0</Slope>
    </Zone>
    <IncludeInDocumentation>true</IncludeInDocumentation>
    <Enabled>true</Enabled>
  </Simulation>
  <IncludeInDocumentation>true</IncludeInDocumentation>
  <Enabled>true</Enabled>
  <ExplorerWidth>300</ExplorerWidth>
</Simulations>